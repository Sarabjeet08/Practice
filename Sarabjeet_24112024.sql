--------------------------------------------------------
--  File created - Sunday-November-24-2024   
--------------------------------------------------------
--------------------------------------------------------
--  Alter session
--------------------------------------------------------
ALTER SESSION SET CONTAINER = XEPDB1;

--------------------------------------------------------
--  Drop user if already created
--------------------------------------------------------
DROP USER Project1 CASCADE;

--------------------------------------------------------
--  Create User and IDENTIFIEDby pass
--------------------------------------------------------
CREATE USER Project1 IDENTIFIED BY pass; 

--------------------------------------------------------
--  Connect with user
--------------------------------------------------------
GRANT CONNECT, RESOURCE TO Project1;

--------------------------------------------------------
--  Assign SPACE for the user
--------------------------------------------------------
GRANT UNLIMITED TABLESPACE TO Project1;

--------------------------------------------------------
--  DDL for Type TYPE_REPORT_ROW
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TYPE "PROJECT1"."TYPE_REPORT_ROW" AS OBJECT 
( REPORT_ID	CHAR(32 BYTE)
,REPORT_RESULT	NUMBER(38,0)
,REPORT_COMMENTS	VARCHAR2(250 BYTE)
,REPORT_CREATED	TIMESTAMP(6)
,REPORT_MODIFIED	TIMESTAMP(6)
,STUDENT_ID	CHAR(32 BYTE)
,TEACHER_ID	CHAR(32 BYTE)
,REPORT_EXAM_DATE	DATE
)

/
--------------------------------------------------------
--  DDL for Type TYPE_REPORT_ROW_STUDENT_ID
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TYPE "PROJECT1"."TYPE_REPORT_ROW_STUDENT_ID" AS OBJECT 
( REPORT_ID	CHAR(32 BYTE)
,REPORT_RESULT	NUMBER(38,0)
,REPORT_COMMENTS	VARCHAR2(250 BYTE)
,REPORT_CREATED	TIMESTAMP(6)
,REPORT_MODIFIED	TIMESTAMP(6)
,STUDENT_ID	CHAR(32 BYTE)
,STUDENT_FIRST_NAME VARCHAR2(20 BYTE)
,STUDENT_LAST_NAME VARCHAR2(20 BYTE)
,TEACHER_FIRST_NAME VARCHAR2(20 BYTE)
,TEACHER_LAST_NAME VARCHAR2(20 BYTE)
,TEACHER_ID	CHAR(32 BYTE)
,REPORT_EXAM_DATE	DATE
)

/
--------------------------------------------------------
--  DDL for Type TYPE_REPORT_TABLE
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TYPE "PROJECT1"."TYPE_REPORT_TABLE" 
AS TABLE OF TYPE_REPORT_ROW;

/
--------------------------------------------------------
--  DDL for Type TYPE_REPORT_TABLE_STUDENT_ID
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TYPE "PROJECT1"."TYPE_REPORT_TABLE_STUDENT_ID" 
AS TABLE OF TYPE_REPORT_ROW_STUDENT_ID;

/
--------------------------------------------------------
--  DDL for Type TYPE_STUDENTS_ENTIRE_TABLE
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TYPE "PROJECT1"."TYPE_STUDENTS_ENTIRE_TABLE" 
AS TABLE OF TYPE_STUDENTS_ONE_ROW;



/
--------------------------------------------------------
--  DDL for Type TYPE_STUDENTS_ONE_ROW
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TYPE "PROJECT1"."TYPE_STUDENTS_ONE_ROW" AS OBJECT 
( STUDENT_ID	CHAR(32 BYTE),
STUDENT_FIRST_NAME	VARCHAR2(20 BYTE),
STUDENT_LAST_NAME	VARCHAR2(20 BYTE),
STUDENT_ADDRESS	VARCHAR2(100 CHAR),
STUDENT_CITY	VARCHAR2(30 CHAR),
STUDENT_POSTAL_CODE	VARCHAR2(20 CHAR),
STUDENT_NUMBER	VARCHAR2(9 CHAR),
STUDENT_CREATED	TIMESTAMP(6),
STUDENT_MODIFIED	TIMESTAMP(6)
)


/
--------------------------------------------------------
--  DDL for Type TYPE_TEACHERS_ENTIRE_TABLE
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TYPE "PROJECT1"."TYPE_TEACHERS_ENTIRE_TABLE" 
AS TABLE OF TYPE_TEACHERS_ROW;



/
--------------------------------------------------------
--  DDL for Type TYPE_TEACHERS_ROW
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TYPE "PROJECT1"."TYPE_TEACHERS_ROW" AS OBJECT 
(TEACHER_ID	CHAR(32 CHAR),
TEACHER_FIRST_NAME	VARCHAR2(20 BYTE),
TEACHER_LAST_NAME	VARCHAR2(20 BYTE),
TEACHER_EMAIL	VARCHAR2(30 BYTE),
TEACHER_SALARY	NUMBER(10,2),
TEACHER_CREATED	TIMESTAMP(6),
TEACHER_MODIFIED	TIMESTAMP(6)
)


/
--------------------------------------------------------
--  DDL for Type TYPE_TIMESHEET_ROW
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TYPE "PROJECT1"."TYPE_TIMESHEET_ROW" AS OBJECT 
( 
TIMESHEET_ID	CHAR(32 CHAR)
,TIMESHEET_WEEKSTART	DATE
,TEACHER_ID	CHAR(32 CHAR)
,TIMESHEET_WORKED_HOURS	NUMBER(4,1)
,TIMESHEET_CREATED	TIMESTAMP(6)
,TIMESHEET_MODIFIED	TIMESTAMP(6)
)

/
--------------------------------------------------------
--  DDL for Type TYPE_TIMESHEET_ROW_PAY
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TYPE "PROJECT1"."TYPE_TIMESHEET_ROW_PAY" AS OBJECT 
( 
TIMESHEET_ID	CHAR(32 CHAR),
TIMESHEET_WEEKSTART	DATE,
TEACHER_ID	CHAR(32 CHAR),
TIMESHEET_WORKED_HOURS	NUMBER(5,1),
TIMESHEET_CREATED	TIMESTAMP(6),
TIMESHEET_MODIFIED	TIMESTAMP(6),
TEACHER_FIRST_NAME	VARCHAR2(20 BYTE),
TEACHER_LAST_NAME	VARCHAR2(20 BYTE),
TEACHER_SALARY	NUMBER(10,2),
TEACHER_INSURANCE_PAY	NUMBER(5,2)
)

/
--------------------------------------------------------
--  DDL for Type TYPE_TIMESHEET_ROW_TEACHER_ID
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TYPE "PROJECT1"."TYPE_TIMESHEET_ROW_TEACHER_ID" AS OBJECT 
( 
TIMESHEET_ID	CHAR(32 CHAR)
,TIMESHEET_WEEKSTART	DATE
,TEACHER_ID	CHAR(32 CHAR)
,TEAHCER_FIRST_NAME VARCHAR2(20 BYTE)
,TEAHCER_LAST_NAME VARCHAR2(20 BYTE)
,TIMESHEET_WORKED_HOURS	NUMBER(4,1)
,TIMESHEET_CREATED	TIMESTAMP(6)
,TIMESHEET_MODIFIED	TIMESTAMP(6)
)

/
--------------------------------------------------------
--  DDL for Type TYPE_TIMESHEET_TABLE
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TYPE "PROJECT1"."TYPE_TIMESHEET_TABLE" 
AS TABLE OF TYPE_TIMESHEET_ROW;

/
--------------------------------------------------------
--  DDL for Type TYPE_TIMESHEET_TABLE_PAY
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TYPE "PROJECT1"."TYPE_TIMESHEET_TABLE_PAY" 
AS TABLE OF TYPE_TIMESHEET_ROW_PAY;

/
--------------------------------------------------------
--  DDL for Type TYPE_TIMESHEET_TABLE_TEACHER_ID
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TYPE "PROJECT1"."TYPE_TIMESHEET_TABLE_TEACHER_ID" 
AS TABLE OF TYPE_TIMESHEET_ROW_TEACHER_ID;

/
--------------------------------------------------------
--  DDL for Type TYPE_REPORT_ROW
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TYPE "PROJECT1"."TYPE_REPORT_ROW" AS OBJECT 
( REPORT_ID	CHAR(32 BYTE)
,REPORT_RESULT	NUMBER(38,0)
,REPORT_COMMENTS	VARCHAR2(250 BYTE)
,REPORT_CREATED	TIMESTAMP(6)
,REPORT_MODIFIED	TIMESTAMP(6)
,STUDENT_ID	CHAR(32 BYTE)
,TEACHER_ID	CHAR(32 BYTE)
,REPORT_EXAM_DATE	DATE
)

/
--------------------------------------------------------
--  DDL for Type TYPE_REPORT_ROW_STUDENT_ID
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TYPE "PROJECT1"."TYPE_REPORT_ROW_STUDENT_ID" AS OBJECT 
( REPORT_ID	CHAR(32 BYTE)
,REPORT_RESULT	NUMBER(38,0)
,REPORT_COMMENTS	VARCHAR2(250 BYTE)
,REPORT_CREATED	TIMESTAMP(6)
,REPORT_MODIFIED	TIMESTAMP(6)
,STUDENT_ID	CHAR(32 BYTE)
,STUDENT_FIRST_NAME VARCHAR2(20 BYTE)
,STUDENT_LAST_NAME VARCHAR2(20 BYTE)
,TEACHER_FIRST_NAME VARCHAR2(20 BYTE)
,TEACHER_LAST_NAME VARCHAR2(20 BYTE)
,TEACHER_ID	CHAR(32 BYTE)
,REPORT_EXAM_DATE	DATE
)

/
--------------------------------------------------------
--  DDL for Type TYPE_STUDENTS_ONE_ROW
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TYPE "PROJECT1"."TYPE_STUDENTS_ONE_ROW" AS OBJECT 
( STUDENT_ID	CHAR(32 BYTE),
STUDENT_FIRST_NAME	VARCHAR2(20 BYTE),
STUDENT_LAST_NAME	VARCHAR2(20 BYTE),
STUDENT_ADDRESS	VARCHAR2(100 CHAR),
STUDENT_CITY	VARCHAR2(30 CHAR),
STUDENT_POSTAL_CODE	VARCHAR2(20 CHAR),
STUDENT_NUMBER	VARCHAR2(9 CHAR),
STUDENT_CREATED	TIMESTAMP(6),
STUDENT_MODIFIED	TIMESTAMP(6)
)


/
--------------------------------------------------------
--  DDL for Type TYPE_TEACHERS_ROW
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TYPE "PROJECT1"."TYPE_TEACHERS_ROW" AS OBJECT 
(TEACHER_ID	CHAR(32 CHAR),
TEACHER_FIRST_NAME	VARCHAR2(20 BYTE),
TEACHER_LAST_NAME	VARCHAR2(20 BYTE),
TEACHER_EMAIL	VARCHAR2(30 BYTE),
TEACHER_SALARY	NUMBER(10,2),
TEACHER_CREATED	TIMESTAMP(6),
TEACHER_MODIFIED	TIMESTAMP(6)
)


/
--------------------------------------------------------
--  DDL for Type TYPE_TIMESHEET_ROW
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TYPE "PROJECT1"."TYPE_TIMESHEET_ROW" AS OBJECT 
( 
TIMESHEET_ID	CHAR(32 CHAR)
,TIMESHEET_WEEKSTART	DATE
,TEACHER_ID	CHAR(32 CHAR)
,TIMESHEET_WORKED_HOURS	NUMBER(4,1)
,TIMESHEET_CREATED	TIMESTAMP(6)
,TIMESHEET_MODIFIED	TIMESTAMP(6)
)

/
--------------------------------------------------------
--  DDL for Type TYPE_TIMESHEET_ROW_PAY
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TYPE "PROJECT1"."TYPE_TIMESHEET_ROW_PAY" AS OBJECT 
( 
TIMESHEET_ID	CHAR(32 CHAR),
TIMESHEET_WEEKSTART	DATE,
TEACHER_ID	CHAR(32 CHAR),
TIMESHEET_WORKED_HOURS	NUMBER(5,1),
TIMESHEET_CREATED	TIMESTAMP(6),
TIMESHEET_MODIFIED	TIMESTAMP(6),
TEACHER_FIRST_NAME	VARCHAR2(20 BYTE),
TEACHER_LAST_NAME	VARCHAR2(20 BYTE),
TEACHER_SALARY	NUMBER(10,2),
TEACHER_INSURANCE_PAY	NUMBER(5,2)
)

/
--------------------------------------------------------
--  DDL for Type TYPE_TIMESHEET_ROW_TEACHER_ID
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TYPE "PROJECT1"."TYPE_TIMESHEET_ROW_TEACHER_ID" AS OBJECT 
( 
TIMESHEET_ID	CHAR(32 CHAR)
,TIMESHEET_WEEKSTART	DATE
,TEACHER_ID	CHAR(32 CHAR)
,TEAHCER_FIRST_NAME VARCHAR2(20 BYTE)
,TEAHCER_LAST_NAME VARCHAR2(20 BYTE)
,TIMESHEET_WORKED_HOURS	NUMBER(4,1)
,TIMESHEET_CREATED	TIMESTAMP(6)
,TIMESHEET_MODIFIED	TIMESTAMP(6)
)

/
--------------------------------------------------------
--  DDL for Type TYPE_REPORT_TABLE_STUDENT_ID
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TYPE "PROJECT1"."TYPE_REPORT_TABLE_STUDENT_ID" 
AS TABLE OF TYPE_REPORT_ROW_STUDENT_ID;

/
--------------------------------------------------------
--  DDL for Type TYPE_STUDENTS_ENTIRE_TABLE
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TYPE "PROJECT1"."TYPE_STUDENTS_ENTIRE_TABLE" 
AS TABLE OF TYPE_STUDENTS_ONE_ROW;



/
--------------------------------------------------------
--  DDL for Type TYPE_TEACHERS_ENTIRE_TABLE
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TYPE "PROJECT1"."TYPE_TEACHERS_ENTIRE_TABLE" 
AS TABLE OF TYPE_TEACHERS_ROW;



/
--------------------------------------------------------
--  DDL for Type TYPE_TIMESHEET_TABLE
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TYPE "PROJECT1"."TYPE_TIMESHEET_TABLE" 
AS TABLE OF TYPE_TIMESHEET_ROW;

/
--------------------------------------------------------
--  DDL for Type TYPE_TIMESHEET_TABLE_TEACHER_ID
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TYPE "PROJECT1"."TYPE_TIMESHEET_TABLE_TEACHER_ID" 
AS TABLE OF TYPE_TIMESHEET_ROW_TEACHER_ID;

/
--------------------------------------------------------
--  DDL for Sequence SEQUENCE_COURSES
--------------------------------------------------------

   CREATE SEQUENCE  "PROJECT1"."SEQUENCE_COURSES"  MINVALUE 1 MAXVALUE 5000 INCREMENT BY 1 START WITH 1031 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence SEQUENCE_STUDENTS
--------------------------------------------------------

   CREATE SEQUENCE  "PROJECT1"."SEQUENCE_STUDENTS"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 5 START WITH 901 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence SEQUENCE_COURSES
--------------------------------------------------------

   CREATE SEQUENCE  "PROJECT1"."SEQUENCE_COURSES"  MINVALUE 1 MAXVALUE 5000 INCREMENT BY 1 START WITH 1031 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence SEQUENCE_STUDENTS
--------------------------------------------------------

   CREATE SEQUENCE  "PROJECT1"."SEQUENCE_STUDENTS"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 5 START WITH 901 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Table COURSES
--------------------------------------------------------

  CREATE TABLE "PROJECT1"."COURSES" 
   (	"COURSE_ID" NUMBER(5,0) DEFAULT NULL, 
	"COURSE_NAME" VARCHAR2(25 BYTE), 
	"COURSE_CODE" VARCHAR2(10 CHAR), 
	"COURSE_DESCRIPTION" VARCHAR2(400 CHAR), 
	"COURSE_CREATED" TIMESTAMP (6) DEFAULT CURRENT_TIMESTAMP, 
	"COURSE_MODIFIED" TIMESTAMP (6) DEFAULT CURRENT_TIMESTAMP
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

   COMMENT ON COLUMN "PROJECT1"."COURSES"."COURSE_ID" IS 'Update Auto Increment';
   COMMENT ON COLUMN "PROJECT1"."COURSES"."COURSE_NAME" IS 'Work as Per Project 1 (Sarabjeet Sing-2411801)';
   COMMENT ON COLUMN "PROJECT1"."COURSES"."COURSE_CODE" IS 'Unique course code';
   COMMENT ON COLUMN "PROJECT1"."COURSES"."COURSE_DESCRIPTION" IS 'Optional course description';
   COMMENT ON COLUMN "PROJECT1"."COURSES"."COURSE_CREATED" IS 'Record creation timestamp';
   COMMENT ON COLUMN "PROJECT1"."COURSES"."COURSE_MODIFIED" IS 'Work as Per Project 1 (Sarabjeet Sing-2411801)';
   COMMENT ON TABLE "PROJECT1"."COURSES"  IS '-- Revision history:
-- Project 1- Sarabjeet Singh (2411801) Created the COURSES table.';
--------------------------------------------------------
--  DDL for Table HISTORY
--------------------------------------------------------

  CREATE TABLE "PROJECT1"."HISTORY" 
   (	"HISTORY_ID" CHAR(32 CHAR) DEFAULT SYS_GUID(), 
	"REPORT_ID" CHAR(32 CHAR), 
	"HISTORY_FIELD_NAME" VARCHAR2(20 BYTE), 
	"HISTORY_MODIFIED_DATE" TIMESTAMP (6) DEFAULT CURRENT_TIMESTAMP, 
	"OLD_VALUE" VARCHAR2(100 BYTE), 
	"NEW_VALUE" VARCHAR2(100 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

   COMMENT ON COLUMN "PROJECT1"."HISTORY"."HISTORY_ID" IS 'New Table Added for Keep Reports History  while Work on Project 2 (Sarabjeet Sing-2411801)';
   COMMENT ON COLUMN "PROJECT1"."HISTORY"."REPORT_ID" IS 'New Table Added for Keep Reports History  while Work on Project 2 (Sarabjeet Sing-2411801)';
   COMMENT ON COLUMN "PROJECT1"."HISTORY"."HISTORY_FIELD_NAME" IS 'New Table Added for Keep Reports History  while Work on Project 2 (Sarabjeet Sing-2411801)';
   COMMENT ON COLUMN "PROJECT1"."HISTORY"."HISTORY_MODIFIED_DATE" IS 'New Table Added for Keep Reports History  while Work on Project 2 (Sarabjeet Sing-2411801)';
   COMMENT ON COLUMN "PROJECT1"."HISTORY"."OLD_VALUE" IS 'New Table Added for Keep Reports History  while Work on Project 2 (Sarabjeet Sing-2411801)';
   COMMENT ON COLUMN "PROJECT1"."HISTORY"."NEW_VALUE" IS 'New Table Added for Keep Reports History  while Work on Project 2 (Sarabjeet Sing-2411801)';
--------------------------------------------------------
--  DDL for Table REPORTS
--------------------------------------------------------

  CREATE TABLE "PROJECT1"."REPORTS" 
   (	"REPORT_ID" CHAR(32 BYTE) DEFAULT SYS_GUID(), 
	"REPORT_RESULT" NUMBER(*,0), 
	"REPORT_COMMENTS" VARCHAR2(250 BYTE), 
	"REPORT_CREATED" TIMESTAMP (6) DEFAULT CURRENT_TIMESTAMP, 
	"REPORT_MODIFIED" TIMESTAMP (6) DEFAULT CURRENT_TIMESTAMP, 
	"STUDENT_ID" CHAR(32 BYTE), 
	"TEACHER_ID" CHAR(32 BYTE), 
	"REPORT_EXAM_DATE" DATE, 
	"COURSE_CODE" VARCHAR2(20 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

   COMMENT ON COLUMN "PROJECT1"."REPORTS"."REPORT_ID" IS 'Unique identifier for each report';
   COMMENT ON COLUMN "PROJECT1"."REPORTS"."REPORT_RESULT" IS 'Report result between 0 and 100';
   COMMENT ON COLUMN "PROJECT1"."REPORTS"."REPORT_COMMENTS" IS 'Optional comments';
   COMMENT ON COLUMN "PROJECT1"."REPORTS"."REPORT_CREATED" IS 'Record creation timestamp';
   COMMENT ON COLUMN "PROJECT1"."REPORTS"."REPORT_MODIFIED" IS 'Last update timestamp';
   COMMENT ON COLUMN "PROJECT1"."REPORTS"."STUDENT_ID" IS 'Foreign key to Students table';
   COMMENT ON COLUMN "PROJECT1"."REPORTS"."TEACHER_ID" IS 'Foreign key to Teachers table';
   COMMENT ON COLUMN "PROJECT1"."REPORTS"."REPORT_EXAM_DATE" IS 'EXAM DATE RECORD - New Field Add while work on Project 2';
   COMMENT ON COLUMN "PROJECT1"."REPORTS"."COURSE_CODE" IS 'Add New Field for Modified Procedure Count Marks';
   COMMENT ON TABLE "PROJECT1"."REPORTS"  IS '-- Revision history:
-- Project 1 Sarabjeet Singh (2411801) Created the REPORTS table.';
--------------------------------------------------------
--  DDL for Table STUDENTS
--------------------------------------------------------

  CREATE TABLE "PROJECT1"."STUDENTS" 
   (	"STUDENT_ID" CHAR(32 BYTE) DEFAULT SYS_GUID(), 
	"STUDENT_FIRST_NAME" VARCHAR2(20 BYTE), 
	"STUDENT_LAST_NAME" VARCHAR2(20 BYTE), 
	"STUDENT_ADDRESS" VARCHAR2(100 CHAR), 
	"STUDENT_CITY" VARCHAR2(30 CHAR), 
	"STUDENT_POSTAL_CODE" VARCHAR2(20 CHAR), 
	"STUDENT_NUMBER" VARCHAR2(50 CHAR) DEFAULT 'PUPIL', 
	"STUDENT_CREATED" TIMESTAMP (6) DEFAULT CURRENT_TIMESTAMP, 
	"STUDENT_MODIFIED" TIMESTAMP (6) DEFAULT CURRENT_TIMESTAMP, 
	"STUDENT_EXAM_ATTEMPT" NUMBER, 
	"STUDENT_ALLERGIES" VARCHAR2(200 BYTE) DEFAULT 'Not have any Allergies'
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

   COMMENT ON COLUMN "PROJECT1"."STUDENTS"."STUDENT_ID" IS 'Unique identifier for each student';
   COMMENT ON COLUMN "PROJECT1"."STUDENTS"."STUDENT_FIRST_NAME" IS 'First name, cannot be NULL';
   COMMENT ON COLUMN "PROJECT1"."STUDENTS"."STUDENT_LAST_NAME" IS 'Last name, cannot be NULL';
   COMMENT ON COLUMN "PROJECT1"."STUDENTS"."STUDENT_ADDRESS" IS 'Address, cannot be NULL';
   COMMENT ON COLUMN "PROJECT1"."STUDENTS"."STUDENT_CITY" IS 'City, cannot be NULL';
   COMMENT ON COLUMN "PROJECT1"."STUDENTS"."STUDENT_POSTAL_CODE" IS 'Postal code, cannot be NULL';
   COMMENT ON COLUMN "PROJECT1"."STUDENTS"."STUDENT_NUMBER" IS 'Unique student number';
   COMMENT ON COLUMN "PROJECT1"."STUDENTS"."STUDENT_CREATED" IS 'Record creation timestamp';
   COMMENT ON COLUMN "PROJECT1"."STUDENTS"."STUDENT_MODIFIED" IS 'Last update timestamp';
   COMMENT ON COLUMN "PROJECT1"."STUDENTS"."STUDENT_EXAM_ATTEMPT" IS 'EXAM Pass or Fail Counter - Add new Field while work on Project 2';
   COMMENT ON COLUMN "PROJECT1"."STUDENTS"."STUDENT_ALLERGIES" IS 'New Field Add Whle Work on Project 3';
   COMMENT ON TABLE "PROJECT1"."STUDENTS"  IS '-- Revision history:
-- Project 1 Sarabjeet Singh (2411801) Created the STUDENTS table.';
--------------------------------------------------------
--  DDL for Table TEACHERS
--------------------------------------------------------

  CREATE TABLE "PROJECT1"."TEACHERS" 
   (	"TEACHER_ID" CHAR(32 CHAR) DEFAULT SYS_GUID(), 
	"TEACHER_FIRST_NAME" VARCHAR2(20 BYTE), 
	"TEACHER_LAST_NAME" VARCHAR2(20 BYTE), 
	"TEACHER_EMAIL" VARCHAR2(30 BYTE), 
	"TEACHER_SALARY" NUMBER(10,2), 
	"TEACHER_CREATED" TIMESTAMP (6) DEFAULT CURRENT_TIMESTAMP, 
	"TEACHER_MODIFIED" TIMESTAMP (6) DEFAULT CURRENT_TIMESTAMP, 
	"TEACHER_SIN" CHAR(9 CHAR), 
	"TEACHER_INSURANCE_PAY" NUMBER(5,2)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

   COMMENT ON COLUMN "PROJECT1"."TEACHERS"."TEACHER_ID" IS 'Unique identifier for each teacher';
   COMMENT ON COLUMN "PROJECT1"."TEACHERS"."TEACHER_FIRST_NAME" IS 'Teacher''s first name, cannot be NULL';
   COMMENT ON COLUMN "PROJECT1"."TEACHERS"."TEACHER_LAST_NAME" IS 'Teacher''s last name, cannot be NULL';
   COMMENT ON COLUMN "PROJECT1"."TEACHERS"."TEACHER_EMAIL" IS 'Unique email for the teacher';
   COMMENT ON COLUMN "PROJECT1"."TEACHERS"."TEACHER_SALARY" IS 'HOURLY- Work as Per Project 1 (Sarabjeet Sing-2411801)';
   COMMENT ON COLUMN "PROJECT1"."TEACHERS"."TEACHER_CREATED" IS 'Record creation timestamp';
   COMMENT ON COLUMN "PROJECT1"."TEACHERS"."TEACHER_MODIFIED" IS 'Last update timestamp';
   COMMENT ON COLUMN "PROJECT1"."TEACHERS"."TEACHER_SIN" IS 'New Field Added Work as Per Project 2 (Sarabjeet Sing-2411801)';
   COMMENT ON COLUMN "PROJECT1"."TEACHERS"."TEACHER_INSURANCE_PAY" IS 'New Field Added Work as Per Project 2 (Sarabjeet Sing-2411801)';
   COMMENT ON TABLE "PROJECT1"."TEACHERS"  IS '-- Revision history:
-- Project-1 Sarabjeet Singh (2411801) Created the TEACHERS table.';
--------------------------------------------------------
--  DDL for Table TIMESHEETS
--------------------------------------------------------

  CREATE TABLE "PROJECT1"."TIMESHEETS" 
   (	"TIMESHEET_ID" CHAR(32 CHAR) DEFAULT SYS_GUID(), 
	"TIMESHEET_WEEKSTART" DATE, 
	"TEACHER_ID" CHAR(32 CHAR), 
	"TIMESHEET_WORKED_HOURS" NUMBER(5,1), 
	"TIMESHEET_CREATED" TIMESTAMP (6) DEFAULT CURRENT_TIMESTAMP, 
	"TIMESHEET_MODIFIED" TIMESTAMP (6) DEFAULT CURRENT_TIMESTAMP
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

   COMMENT ON COLUMN "PROJECT1"."TIMESHEETS"."TIMESHEET_ID" IS 'New Table Added while Work on Project 2 (Sarabjeet Sing-2411801)';
   COMMENT ON COLUMN "PROJECT1"."TIMESHEETS"."TIMESHEET_WEEKSTART" IS 'New Table Added while Work on Project 2 (Sarabjeet Sing-2411801)';
   COMMENT ON COLUMN "PROJECT1"."TIMESHEETS"."TEACHER_ID" IS 'New Table Added while Work on Project 2 (Sarabjeet Sing-2411801)';
   COMMENT ON COLUMN "PROJECT1"."TIMESHEETS"."TIMESHEET_WORKED_HOURS" IS 'New Table Added while Work on Project 2 (Sarabjeet Sing-2411801)';
   COMMENT ON COLUMN "PROJECT1"."TIMESHEETS"."TIMESHEET_CREATED" IS 'New Table Added while Work on Project 2 (Sarabjeet Sing-2411801)';
   COMMENT ON COLUMN "PROJECT1"."TIMESHEETS"."TIMESHEET_MODIFIED" IS 'New Table Added while Work on Project 2 (Sarabjeet Sing-2411801)';
--------------------------------------------------------
--  DDL for Table REPORTS
--------------------------------------------------------

  CREATE TABLE "PROJECT1"."REPORTS" 
   (	"REPORT_ID" CHAR(32 BYTE) DEFAULT SYS_GUID(), 
	"REPORT_RESULT" NUMBER(*,0), 
	"REPORT_COMMENTS" VARCHAR2(250 BYTE), 
	"REPORT_CREATED" TIMESTAMP (6) DEFAULT CURRENT_TIMESTAMP, 
	"REPORT_MODIFIED" TIMESTAMP (6) DEFAULT CURRENT_TIMESTAMP, 
	"STUDENT_ID" CHAR(32 BYTE), 
	"TEACHER_ID" CHAR(32 BYTE), 
	"REPORT_EXAM_DATE" DATE, 
	"COURSE_CODE" VARCHAR2(20 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

   COMMENT ON COLUMN "PROJECT1"."REPORTS"."REPORT_ID" IS 'Unique identifier for each report';
   COMMENT ON COLUMN "PROJECT1"."REPORTS"."REPORT_RESULT" IS 'Report result between 0 and 100';
   COMMENT ON COLUMN "PROJECT1"."REPORTS"."REPORT_COMMENTS" IS 'Optional comments';
   COMMENT ON COLUMN "PROJECT1"."REPORTS"."REPORT_CREATED" IS 'Record creation timestamp';
   COMMENT ON COLUMN "PROJECT1"."REPORTS"."REPORT_MODIFIED" IS 'Last update timestamp';
   COMMENT ON COLUMN "PROJECT1"."REPORTS"."STUDENT_ID" IS 'Foreign key to Students table';
   COMMENT ON COLUMN "PROJECT1"."REPORTS"."TEACHER_ID" IS 'Foreign key to Teachers table';
   COMMENT ON COLUMN "PROJECT1"."REPORTS"."REPORT_EXAM_DATE" IS 'EXAM DATE RECORD - New Field Add while work on Project 2';
   COMMENT ON COLUMN "PROJECT1"."REPORTS"."COURSE_CODE" IS 'Add New Field for Modified Procedure Count Marks';
   COMMENT ON TABLE "PROJECT1"."REPORTS"  IS '-- Revision history:
-- Project 1 Sarabjeet Singh (2411801) Created the REPORTS table.';
--------------------------------------------------------
--  DDL for Table TEACHERS
--------------------------------------------------------

  CREATE TABLE "PROJECT1"."TEACHERS" 
   (	"TEACHER_ID" CHAR(32 CHAR) DEFAULT SYS_GUID(), 
	"TEACHER_FIRST_NAME" VARCHAR2(20 BYTE), 
	"TEACHER_LAST_NAME" VARCHAR2(20 BYTE), 
	"TEACHER_EMAIL" VARCHAR2(30 BYTE), 
	"TEACHER_SALARY" NUMBER(10,2), 
	"TEACHER_CREATED" TIMESTAMP (6) DEFAULT CURRENT_TIMESTAMP, 
	"TEACHER_MODIFIED" TIMESTAMP (6) DEFAULT CURRENT_TIMESTAMP, 
	"TEACHER_SIN" CHAR(9 CHAR), 
	"TEACHER_INSURANCE_PAY" NUMBER(5,2)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

   COMMENT ON COLUMN "PROJECT1"."TEACHERS"."TEACHER_ID" IS 'Unique identifier for each teacher';
   COMMENT ON COLUMN "PROJECT1"."TEACHERS"."TEACHER_FIRST_NAME" IS 'Teacher''s first name, cannot be NULL';
   COMMENT ON COLUMN "PROJECT1"."TEACHERS"."TEACHER_LAST_NAME" IS 'Teacher''s last name, cannot be NULL';
   COMMENT ON COLUMN "PROJECT1"."TEACHERS"."TEACHER_EMAIL" IS 'Unique email for the teacher';
   COMMENT ON COLUMN "PROJECT1"."TEACHERS"."TEACHER_SALARY" IS 'HOURLY- Work as Per Project 1 (Sarabjeet Sing-2411801)';
   COMMENT ON COLUMN "PROJECT1"."TEACHERS"."TEACHER_CREATED" IS 'Record creation timestamp';
   COMMENT ON COLUMN "PROJECT1"."TEACHERS"."TEACHER_MODIFIED" IS 'Last update timestamp';
   COMMENT ON COLUMN "PROJECT1"."TEACHERS"."TEACHER_SIN" IS 'New Field Added Work as Per Project 2 (Sarabjeet Sing-2411801)';
   COMMENT ON COLUMN "PROJECT1"."TEACHERS"."TEACHER_INSURANCE_PAY" IS 'New Field Added Work as Per Project 2 (Sarabjeet Sing-2411801)';
   COMMENT ON TABLE "PROJECT1"."TEACHERS"  IS '-- Revision history:
-- Project-1 Sarabjeet Singh (2411801) Created the TEACHERS table.';
--------------------------------------------------------
--  DDL for Table COURSES
--------------------------------------------------------

  CREATE TABLE "PROJECT1"."COURSES" 
   (	"COURSE_ID" NUMBER(5,0) DEFAULT NULL, 
	"COURSE_NAME" VARCHAR2(25 BYTE), 
	"COURSE_CODE" VARCHAR2(10 CHAR), 
	"COURSE_DESCRIPTION" VARCHAR2(400 CHAR), 
	"COURSE_CREATED" TIMESTAMP (6) DEFAULT CURRENT_TIMESTAMP, 
	"COURSE_MODIFIED" TIMESTAMP (6) DEFAULT CURRENT_TIMESTAMP
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

   COMMENT ON COLUMN "PROJECT1"."COURSES"."COURSE_ID" IS 'Update Auto Increment';
   COMMENT ON COLUMN "PROJECT1"."COURSES"."COURSE_NAME" IS 'Work as Per Project 1 (Sarabjeet Sing-2411801)';
   COMMENT ON COLUMN "PROJECT1"."COURSES"."COURSE_CODE" IS 'Unique course code';
   COMMENT ON COLUMN "PROJECT1"."COURSES"."COURSE_DESCRIPTION" IS 'Optional course description';
   COMMENT ON COLUMN "PROJECT1"."COURSES"."COURSE_CREATED" IS 'Record creation timestamp';
   COMMENT ON COLUMN "PROJECT1"."COURSES"."COURSE_MODIFIED" IS 'Work as Per Project 1 (Sarabjeet Sing-2411801)';
   COMMENT ON TABLE "PROJECT1"."COURSES"  IS '-- Revision history:
-- Project 1- Sarabjeet Singh (2411801) Created the COURSES table.';
--------------------------------------------------------
--  DDL for Table HISTORY
--------------------------------------------------------

  CREATE TABLE "PROJECT1"."HISTORY" 
   (	"HISTORY_ID" CHAR(32 CHAR) DEFAULT SYS_GUID(), 
	"REPORT_ID" CHAR(32 CHAR), 
	"HISTORY_FIELD_NAME" VARCHAR2(20 BYTE), 
	"HISTORY_MODIFIED_DATE" TIMESTAMP (6) DEFAULT CURRENT_TIMESTAMP, 
	"OLD_VALUE" VARCHAR2(100 BYTE), 
	"NEW_VALUE" VARCHAR2(100 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

   COMMENT ON COLUMN "PROJECT1"."HISTORY"."HISTORY_ID" IS 'New Table Added for Keep Reports History  while Work on Project 2 (Sarabjeet Sing-2411801)';
   COMMENT ON COLUMN "PROJECT1"."HISTORY"."REPORT_ID" IS 'New Table Added for Keep Reports History  while Work on Project 2 (Sarabjeet Sing-2411801)';
   COMMENT ON COLUMN "PROJECT1"."HISTORY"."HISTORY_FIELD_NAME" IS 'New Table Added for Keep Reports History  while Work on Project 2 (Sarabjeet Sing-2411801)';
   COMMENT ON COLUMN "PROJECT1"."HISTORY"."HISTORY_MODIFIED_DATE" IS 'New Table Added for Keep Reports History  while Work on Project 2 (Sarabjeet Sing-2411801)';
   COMMENT ON COLUMN "PROJECT1"."HISTORY"."OLD_VALUE" IS 'New Table Added for Keep Reports History  while Work on Project 2 (Sarabjeet Sing-2411801)';
   COMMENT ON COLUMN "PROJECT1"."HISTORY"."NEW_VALUE" IS 'New Table Added for Keep Reports History  while Work on Project 2 (Sarabjeet Sing-2411801)';
--------------------------------------------------------
--  DDL for Table STUDENTS
--------------------------------------------------------

  CREATE TABLE "PROJECT1"."STUDENTS" 
   (	"STUDENT_ID" CHAR(32 BYTE) DEFAULT SYS_GUID(), 
	"STUDENT_FIRST_NAME" VARCHAR2(20 BYTE), 
	"STUDENT_LAST_NAME" VARCHAR2(20 BYTE), 
	"STUDENT_ADDRESS" VARCHAR2(100 CHAR), 
	"STUDENT_CITY" VARCHAR2(30 CHAR), 
	"STUDENT_POSTAL_CODE" VARCHAR2(20 CHAR), 
	"STUDENT_NUMBER" VARCHAR2(50 CHAR) DEFAULT 'PUPIL', 
	"STUDENT_CREATED" TIMESTAMP (6) DEFAULT CURRENT_TIMESTAMP, 
	"STUDENT_MODIFIED" TIMESTAMP (6) DEFAULT CURRENT_TIMESTAMP, 
	"STUDENT_EXAM_ATTEMPT" NUMBER, 
	"STUDENT_ALLERGIES" VARCHAR2(200 BYTE) DEFAULT 'Not have any Allergies'
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

   COMMENT ON COLUMN "PROJECT1"."STUDENTS"."STUDENT_ID" IS 'Unique identifier for each student';
   COMMENT ON COLUMN "PROJECT1"."STUDENTS"."STUDENT_FIRST_NAME" IS 'First name, cannot be NULL';
   COMMENT ON COLUMN "PROJECT1"."STUDENTS"."STUDENT_LAST_NAME" IS 'Last name, cannot be NULL';
   COMMENT ON COLUMN "PROJECT1"."STUDENTS"."STUDENT_ADDRESS" IS 'Address, cannot be NULL';
   COMMENT ON COLUMN "PROJECT1"."STUDENTS"."STUDENT_CITY" IS 'City, cannot be NULL';
   COMMENT ON COLUMN "PROJECT1"."STUDENTS"."STUDENT_POSTAL_CODE" IS 'Postal code, cannot be NULL';
   COMMENT ON COLUMN "PROJECT1"."STUDENTS"."STUDENT_NUMBER" IS 'Unique student number';
   COMMENT ON COLUMN "PROJECT1"."STUDENTS"."STUDENT_CREATED" IS 'Record creation timestamp';
   COMMENT ON COLUMN "PROJECT1"."STUDENTS"."STUDENT_MODIFIED" IS 'Last update timestamp';
   COMMENT ON COLUMN "PROJECT1"."STUDENTS"."STUDENT_EXAM_ATTEMPT" IS 'EXAM Pass or Fail Counter - Add new Field while work on Project 2';
   COMMENT ON COLUMN "PROJECT1"."STUDENTS"."STUDENT_ALLERGIES" IS 'New Field Add Whle Work on Project 3';
   COMMENT ON TABLE "PROJECT1"."STUDENTS"  IS '-- Revision history:
-- Project 1 Sarabjeet Singh (2411801) Created the STUDENTS table.';
--------------------------------------------------------
--  DDL for Table TIMESHEETS
--------------------------------------------------------

  CREATE TABLE "PROJECT1"."TIMESHEETS" 
   (	"TIMESHEET_ID" CHAR(32 CHAR) DEFAULT SYS_GUID(), 
	"TIMESHEET_WEEKSTART" DATE, 
	"TEACHER_ID" CHAR(32 CHAR), 
	"TIMESHEET_WORKED_HOURS" NUMBER(5,1), 
	"TIMESHEET_CREATED" TIMESTAMP (6) DEFAULT CURRENT_TIMESTAMP, 
	"TIMESHEET_MODIFIED" TIMESTAMP (6) DEFAULT CURRENT_TIMESTAMP
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

   COMMENT ON COLUMN "PROJECT1"."TIMESHEETS"."TIMESHEET_ID" IS 'New Table Added while Work on Project 2 (Sarabjeet Sing-2411801)';
   COMMENT ON COLUMN "PROJECT1"."TIMESHEETS"."TIMESHEET_WEEKSTART" IS 'New Table Added while Work on Project 2 (Sarabjeet Sing-2411801)';
   COMMENT ON COLUMN "PROJECT1"."TIMESHEETS"."TEACHER_ID" IS 'New Table Added while Work on Project 2 (Sarabjeet Sing-2411801)';
   COMMENT ON COLUMN "PROJECT1"."TIMESHEETS"."TIMESHEET_WORKED_HOURS" IS 'New Table Added while Work on Project 2 (Sarabjeet Sing-2411801)';
   COMMENT ON COLUMN "PROJECT1"."TIMESHEETS"."TIMESHEET_CREATED" IS 'New Table Added while Work on Project 2 (Sarabjeet Sing-2411801)';
   COMMENT ON COLUMN "PROJECT1"."TIMESHEETS"."TIMESHEET_MODIFIED" IS 'New Table Added while Work on Project 2 (Sarabjeet Sing-2411801)';
REM INSERTING into PROJECT1.COURSES
SET DEFINE OFF;
Insert into PROJECT1.COURSES (COURSE_ID,COURSE_NAME,COURSE_CODE,COURSE_DESCRIPTION,COURSE_CREATED,COURSE_MODIFIED) values (1015,'MICROSOFT WORD','MSWOR101','LEARN MS APPLICATIONS',to_timestamp('24-11-24 12:56:50.949000000 PM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),to_timestamp('24-11-24 12:56:50.949000000 PM','DD-MM-RR fmHH12:fmMI:SSXFF AM'));
Insert into PROJECT1.COURSES (COURSE_ID,COURSE_NAME,COURSE_CODE,COURSE_DESCRIPTION,COURSE_CREATED,COURSE_MODIFIED) values (1017,'MICROSOFT WORD','MSWOR105','LEARN MS APPLICATIONS',to_timestamp('24-11-24 4:41:20.693000000 PM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),to_timestamp('24-11-24 4:41:20.693000000 PM','DD-MM-RR fmHH12:fmMI:SSXFF AM'));
Insert into PROJECT1.COURSES (COURSE_ID,COURSE_NAME,COURSE_CODE,COURSE_DESCRIPTION,COURSE_CREATED,COURSE_MODIFIED) values (1013,'DATABASE-1','DATA101','LEARN SQL QUERY',to_timestamp('24-11-24 12:38:46.491000000 PM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),to_timestamp('24-11-24 12:38:46.491000000 PM','DD-MM-RR fmHH12:fmMI:SSXFF AM'));
Insert into PROJECT1.COURSES (COURSE_ID,COURSE_NAME,COURSE_CODE,COURSE_DESCRIPTION,COURSE_CREATED,COURSE_MODIFIED) values (1014,'JAVA','JAVA101','LEARN JAVA SCRIPT',to_timestamp('24-11-24 12:38:46.501000000 PM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),to_timestamp('24-11-24 12:38:46.501000000 PM','DD-MM-RR fmHH12:fmMI:SSXFF AM'));
Insert into PROJECT1.COURSES (COURSE_ID,COURSE_NAME,COURSE_CODE,COURSE_DESCRIPTION,COURSE_CREATED,COURSE_MODIFIED) values (1018,'MICROSOFT WORD','MSWOR108','LEARN MS APPLICATIONS',to_timestamp('24-11-24 4:48:09.070000000 PM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),to_timestamp('24-11-24 4:48:09.070000000 PM','DD-MM-RR fmHH12:fmMI:SSXFF AM'));
Insert into PROJECT1.COURSES (COURSE_ID,COURSE_NAME,COURSE_CODE,COURSE_DESCRIPTION,COURSE_CREATED,COURSE_MODIFIED) values (1020,'MICROSOFT WORD','MSWOR110','LEARN MS APPLICATIONS',to_timestamp('24-11-24 5:23:58.079000000 PM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),to_timestamp('24-11-24 5:23:58.079000000 PM','DD-MM-RR fmHH12:fmMI:SSXFF AM'));
Insert into PROJECT1.COURSES (COURSE_ID,COURSE_NAME,COURSE_CODE,COURSE_DESCRIPTION,COURSE_CREATED,COURSE_MODIFIED) values (1023,'MICROSOFT WORD','MSWORD10','LEARN MS APPLICATIONS',to_timestamp('24-11-24 5:30:41.876000000 PM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),to_timestamp('24-11-24 5:30:41.876000000 PM','DD-MM-RR fmHH12:fmMI:SSXFF AM'));
REM INSERTING into PROJECT1.HISTORY
SET DEFINE OFF;
REM INSERTING into PROJECT1.REPORTS
SET DEFINE OFF;
Insert into PROJECT1.REPORTS (REPORT_ID,REPORT_RESULT,REPORT_COMMENTS,REPORT_CREATED,REPORT_MODIFIED,STUDENT_ID,TEACHER_ID,REPORT_EXAM_DATE,COURSE_CODE) values ('0E9F6062A09149B995F09274E6A14CD1',97,'GOOD',to_timestamp('24-11-24 4:08:43.020000000 AM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),to_timestamp('24-11-24 4:45:31.209000000 AM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),'947681B9FB4144A282DEFCEC70A23624','CE61B6286D344CBE9342369677CCF4D1',to_date('26-10-24','DD-MM-RR'),null);
Insert into PROJECT1.REPORTS (REPORT_ID,REPORT_RESULT,REPORT_COMMENTS,REPORT_CREATED,REPORT_MODIFIED,STUDENT_ID,TEACHER_ID,REPORT_EXAM_DATE,COURSE_CODE) values ('40488D9216EF44B8836983CD66456523',97,'GOOD',to_timestamp('24-11-24 10:22:03.909000000 AM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),to_timestamp('24-11-24 3:48:44.077000000 PM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),'947681B9FB4144A282DEFCEC70A23624','CE61B6286D344CBE9342369677CCF4D1',to_date('23-11-24','DD-MM-RR'),null);
Insert into PROJECT1.REPORTS (REPORT_ID,REPORT_RESULT,REPORT_COMMENTS,REPORT_CREATED,REPORT_MODIFIED,STUDENT_ID,TEACHER_ID,REPORT_EXAM_DATE,COURSE_CODE) values ('371D7E5A0EED4E3D9151781B78DC69B8',97,'GOOD',to_timestamp('24-11-24 10:22:03.913000000 AM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),to_timestamp('24-11-24 10:22:03.913000000 AM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),'947681B9FB4144A282DEFCEC70A23624','CE61B6286D344CBE9342369677CCF4D1',to_date('26-10-24','DD-MM-RR'),null);
Insert into PROJECT1.REPORTS (REPORT_ID,REPORT_RESULT,REPORT_COMMENTS,REPORT_CREATED,REPORT_MODIFIED,STUDENT_ID,TEACHER_ID,REPORT_EXAM_DATE,COURSE_CODE) values ('091FB62175BA438AAB76B8A315D42E81',97,'GOOD',to_timestamp('24-11-24 10:22:03.916000000 AM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),to_timestamp('24-11-24 10:22:03.916000000 AM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),'947681B9FB4144A282DEFCEC70A23624','CE61B6286D344CBE9342369677CCF4D1',to_date('26-10-24','DD-MM-RR'),null);
Insert into PROJECT1.REPORTS (REPORT_ID,REPORT_RESULT,REPORT_COMMENTS,REPORT_CREATED,REPORT_MODIFIED,STUDENT_ID,TEACHER_ID,REPORT_EXAM_DATE,COURSE_CODE) values ('DE3E0BACB499472FAAA3158DEDCF0887',97,'GOOD',to_timestamp('24-11-24 10:22:03.920000000 AM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),to_timestamp('24-11-24 10:22:03.920000000 AM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),'947681B9FB4144A282DEFCEC70A23624','CE61B6286D344CBE9342369677CCF4D1',to_date('26-10-24','DD-MM-RR'),null);
Insert into PROJECT1.REPORTS (REPORT_ID,REPORT_RESULT,REPORT_COMMENTS,REPORT_CREATED,REPORT_MODIFIED,STUDENT_ID,TEACHER_ID,REPORT_EXAM_DATE,COURSE_CODE) values ('1A4DF0E761F942C188E90D650A12338F',97,'GOOD',to_timestamp('24-11-24 10:22:03.926000000 AM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),to_timestamp('24-11-24 10:22:03.926000000 AM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),'947681B9FB4144A282DEFCEC70A23624','CE61B6286D344CBE9342369677CCF4D1',to_date('26-10-24','DD-MM-RR'),null);
Insert into PROJECT1.REPORTS (REPORT_ID,REPORT_RESULT,REPORT_COMMENTS,REPORT_CREATED,REPORT_MODIFIED,STUDENT_ID,TEACHER_ID,REPORT_EXAM_DATE,COURSE_CODE) values ('EE52304B2A4149B6A71C4590D3B7B0D9',97,'GOOD',to_timestamp('24-11-24 10:22:03.930000000 AM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),to_timestamp('24-11-24 10:22:03.930000000 AM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),'947681B9FB4144A282DEFCEC70A23624','CE61B6286D344CBE9342369677CCF4D1',to_date('26-10-24','DD-MM-RR'),null);
Insert into PROJECT1.REPORTS (REPORT_ID,REPORT_RESULT,REPORT_COMMENTS,REPORT_CREATED,REPORT_MODIFIED,STUDENT_ID,TEACHER_ID,REPORT_EXAM_DATE,COURSE_CODE) values ('315748DDDF534DC19437760428E6FA9B',97,'GOOD',to_timestamp('24-11-24 10:22:03.934000000 AM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),to_timestamp('24-11-24 10:22:03.934000000 AM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),'947681B9FB4144A282DEFCEC70A23624','CE61B6286D344CBE9342369677CCF4D1',to_date('26-10-24','DD-MM-RR'),null);
Insert into PROJECT1.REPORTS (REPORT_ID,REPORT_RESULT,REPORT_COMMENTS,REPORT_CREATED,REPORT_MODIFIED,STUDENT_ID,TEACHER_ID,REPORT_EXAM_DATE,COURSE_CODE) values ('6A16D20CE4314EBB90F27756225A77BA',97,'GOOD',to_timestamp('24-11-24 10:22:03.938000000 AM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),to_timestamp('24-11-24 10:22:03.938000000 AM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),'947681B9FB4144A282DEFCEC70A23624','CE61B6286D344CBE9342369677CCF4D1',to_date('26-10-24','DD-MM-RR'),null);
Insert into PROJECT1.REPORTS (REPORT_ID,REPORT_RESULT,REPORT_COMMENTS,REPORT_CREATED,REPORT_MODIFIED,STUDENT_ID,TEACHER_ID,REPORT_EXAM_DATE,COURSE_CODE) values ('7EA8209737014093B83048D4EA441304',97,'GOOD',to_timestamp('24-11-24 10:22:03.946000000 AM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),to_timestamp('24-11-24 10:22:03.946000000 AM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),'947681B9FB4144A282DEFCEC70A23624','CE61B6286D344CBE9342369677CCF4D1',to_date('26-10-24','DD-MM-RR'),null);
Insert into PROJECT1.REPORTS (REPORT_ID,REPORT_RESULT,REPORT_COMMENTS,REPORT_CREATED,REPORT_MODIFIED,STUDENT_ID,TEACHER_ID,REPORT_EXAM_DATE,COURSE_CODE) values ('6AF4B9056E214F2393D0DA72439D4C0D',97,'GOOD',to_timestamp('24-11-24 10:22:03.950000000 AM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),to_timestamp('24-11-24 10:22:03.950000000 AM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),'947681B9FB4144A282DEFCEC70A23624','CE61B6286D344CBE9342369677CCF4D1',to_date('26-10-24','DD-MM-RR'),null);
Insert into PROJECT1.REPORTS (REPORT_ID,REPORT_RESULT,REPORT_COMMENTS,REPORT_CREATED,REPORT_MODIFIED,STUDENT_ID,TEACHER_ID,REPORT_EXAM_DATE,COURSE_CODE) values ('B3BBD5B070934CB69F61A9EBCE251804',97,'GOOD',to_timestamp('24-11-24 10:22:03.954000000 AM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),to_timestamp('24-11-24 10:22:03.954000000 AM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),'947681B9FB4144A282DEFCEC70A23624','CE61B6286D344CBE9342369677CCF4D1',to_date('26-10-24','DD-MM-RR'),null);
Insert into PROJECT1.REPORTS (REPORT_ID,REPORT_RESULT,REPORT_COMMENTS,REPORT_CREATED,REPORT_MODIFIED,STUDENT_ID,TEACHER_ID,REPORT_EXAM_DATE,COURSE_CODE) values ('FC1C669E1EFB4C8C843E4C143482FB24',97,'GOOD',to_timestamp('24-11-24 10:22:03.958000000 AM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),to_timestamp('24-11-24 10:22:03.958000000 AM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),'947681B9FB4144A282DEFCEC70A23624','CE61B6286D344CBE9342369677CCF4D1',to_date('26-10-24','DD-MM-RR'),null);
Insert into PROJECT1.REPORTS (REPORT_ID,REPORT_RESULT,REPORT_COMMENTS,REPORT_CREATED,REPORT_MODIFIED,STUDENT_ID,TEACHER_ID,REPORT_EXAM_DATE,COURSE_CODE) values ('D183F6BEA6D84472B739D6D85EB7ED6D',97,'GOOD',to_timestamp('24-11-24 10:22:03.963000000 AM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),to_timestamp('24-11-24 10:22:03.963000000 AM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),'947681B9FB4144A282DEFCEC70A23624','CE61B6286D344CBE9342369677CCF4D1',to_date('26-10-24','DD-MM-RR'),null);
Insert into PROJECT1.REPORTS (REPORT_ID,REPORT_RESULT,REPORT_COMMENTS,REPORT_CREATED,REPORT_MODIFIED,STUDENT_ID,TEACHER_ID,REPORT_EXAM_DATE,COURSE_CODE) values ('D0803E5B61D445A081B7C4FD947D02CC',97,'GOOD',to_timestamp('24-11-24 10:22:03.968000000 AM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),to_timestamp('24-11-24 10:22:03.968000000 AM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),'947681B9FB4144A282DEFCEC70A23624','CE61B6286D344CBE9342369677CCF4D1',to_date('26-10-24','DD-MM-RR'),null);
Insert into PROJECT1.REPORTS (REPORT_ID,REPORT_RESULT,REPORT_COMMENTS,REPORT_CREATED,REPORT_MODIFIED,STUDENT_ID,TEACHER_ID,REPORT_EXAM_DATE,COURSE_CODE) values ('1D62FC838DA54BC3954B2ADE804B82EA',97,'GOOD',to_timestamp('24-11-24 10:22:03.973000000 AM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),to_timestamp('24-11-24 10:22:03.973000000 AM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),'947681B9FB4144A282DEFCEC70A23624','CE61B6286D344CBE9342369677CCF4D1',to_date('26-10-24','DD-MM-RR'),null);
Insert into PROJECT1.REPORTS (REPORT_ID,REPORT_RESULT,REPORT_COMMENTS,REPORT_CREATED,REPORT_MODIFIED,STUDENT_ID,TEACHER_ID,REPORT_EXAM_DATE,COURSE_CODE) values ('F20383DBC3024FD2987986D708924E59',97,'GOOD',to_timestamp('24-11-24 10:22:03.977000000 AM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),to_timestamp('24-11-24 10:22:03.977000000 AM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),'947681B9FB4144A282DEFCEC70A23624','CE61B6286D344CBE9342369677CCF4D1',to_date('26-10-24','DD-MM-RR'),null);
Insert into PROJECT1.REPORTS (REPORT_ID,REPORT_RESULT,REPORT_COMMENTS,REPORT_CREATED,REPORT_MODIFIED,STUDENT_ID,TEACHER_ID,REPORT_EXAM_DATE,COURSE_CODE) values ('308F91B8F65F427D873B9D628E734245',97,'GOOD',to_timestamp('24-11-24 10:22:03.983000000 AM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),to_timestamp('24-11-24 10:22:03.983000000 AM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),'947681B9FB4144A282DEFCEC70A23624','CE61B6286D344CBE9342369677CCF4D1',to_date('26-10-24','DD-MM-RR'),null);
Insert into PROJECT1.REPORTS (REPORT_ID,REPORT_RESULT,REPORT_COMMENTS,REPORT_CREATED,REPORT_MODIFIED,STUDENT_ID,TEACHER_ID,REPORT_EXAM_DATE,COURSE_CODE) values ('53497866912B4619B1E3A4A0DD862017',97,'GOOD',to_timestamp('24-11-24 10:22:03.986000000 AM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),to_timestamp('24-11-24 10:23:06.355000000 AM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),'947681B9FB4144A282DEFCEC70A23624','CE61B6286D344CBE9342369677CCF4D1',to_date('26-10-24','DD-MM-RR'),null);
Insert into PROJECT1.REPORTS (REPORT_ID,REPORT_RESULT,REPORT_COMMENTS,REPORT_CREATED,REPORT_MODIFIED,STUDENT_ID,TEACHER_ID,REPORT_EXAM_DATE,COURSE_CODE) values ('8D0CECE405BD47E68AE073D7D227239A',97,'GOOD',to_timestamp('24-11-24 10:23:06.356000000 AM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),to_timestamp('24-11-24 10:23:06.356000000 AM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),'947681B9FB4144A282DEFCEC70A23624','CE61B6286D344CBE9342369677CCF4D1',to_date('26-10-24','DD-MM-RR'),null);
Insert into PROJECT1.REPORTS (REPORT_ID,REPORT_RESULT,REPORT_COMMENTS,REPORT_CREATED,REPORT_MODIFIED,STUDENT_ID,TEACHER_ID,REPORT_EXAM_DATE,COURSE_CODE) values ('8AC35B9AE2674CB283F8CC8D3D77E6EC',97,'GOOD',to_timestamp('24-11-24 10:23:06.360000000 AM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),to_timestamp('24-11-24 10:23:06.360000000 AM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),'947681B9FB4144A282DEFCEC70A23624','CE61B6286D344CBE9342369677CCF4D1',to_date('26-10-24','DD-MM-RR'),null);
Insert into PROJECT1.REPORTS (REPORT_ID,REPORT_RESULT,REPORT_COMMENTS,REPORT_CREATED,REPORT_MODIFIED,STUDENT_ID,TEACHER_ID,REPORT_EXAM_DATE,COURSE_CODE) values ('CCBA17ADAF2948B5BC35A3094705B779',97,'GOOD',to_timestamp('24-11-24 11:03:37.401000000 AM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),to_timestamp('24-11-24 11:03:37.401000000 AM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),'947681B9FB4144A282DEFCEC70A23624','CE61B6286D344CBE9342369677CCF4D1',to_date('26-10-24','DD-MM-RR'),null);
Insert into PROJECT1.REPORTS (REPORT_ID,REPORT_RESULT,REPORT_COMMENTS,REPORT_CREATED,REPORT_MODIFIED,STUDENT_ID,TEACHER_ID,REPORT_EXAM_DATE,COURSE_CODE) values ('45AD90A947FE4A0C9A51D8424EE28E4D',80,'Best',to_timestamp('24-11-24 11:15:32.917000000 AM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),to_timestamp('24-11-24 11:15:32.917000000 AM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),'496EC7F325A644899F09DFE8E7863114','CE61B6286D344CBE9342369677CCF4D1',to_date('12-11-24','DD-MM-RR'),null);
Insert into PROJECT1.REPORTS (REPORT_ID,REPORT_RESULT,REPORT_COMMENTS,REPORT_CREATED,REPORT_MODIFIED,STUDENT_ID,TEACHER_ID,REPORT_EXAM_DATE,COURSE_CODE) values ('65B45D60BBF14E3DA94059FA1E0ECD07',89,'Good performanc',to_timestamp('24-11-24 3:58:25.333000000 PM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),to_timestamp('24-11-24 3:58:25.333000000 PM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),'A0E09D0912234D049B97E81DCE51E499','CE61B6286D344CBE9342369677CCF4D1',to_date('23-11-24','DD-MM-RR'),null);
Insert into PROJECT1.REPORTS (REPORT_ID,REPORT_RESULT,REPORT_COMMENTS,REPORT_CREATED,REPORT_MODIFIED,STUDENT_ID,TEACHER_ID,REPORT_EXAM_DATE,COURSE_CODE) values ('C6649D68C4E846F39145CCED0A9722AD',89,'Good performanc',to_timestamp('24-11-24 4:16:28.656000000 PM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),to_timestamp('24-11-24 4:16:28.656000000 PM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),'A0E09D0912234D049B97E81DCE51E499','CE61B6286D344CBE9342369677CCF4D1',to_date('23-11-24','DD-MM-RR'),null);
REM INSERTING into PROJECT1.STUDENTS
SET DEFINE OFF;
Insert into PROJECT1.STUDENTS (STUDENT_ID,STUDENT_FIRST_NAME,STUDENT_LAST_NAME,STUDENT_ADDRESS,STUDENT_CITY,STUDENT_POSTAL_CODE,STUDENT_NUMBER,STUDENT_CREATED,STUDENT_MODIFIED,STUDENT_EXAM_ATTEMPT,STUDENT_ALLERGIES) values ('496EC7F325A644899F09DFE8E7863114','Sarab','Singh','#7181','Montreal','abcefg','801',to_timestamp('10-11-24 4:47:19.432000000 PM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),to_timestamp('24-11-24 1:30:18.285000000 PM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),2,'CHICKEN');
Insert into PROJECT1.STUDENTS (STUDENT_ID,STUDENT_FIRST_NAME,STUDENT_LAST_NAME,STUDENT_ADDRESS,STUDENT_CITY,STUDENT_POSTAL_CODE,STUDENT_NUMBER,STUDENT_CREATED,STUDENT_MODIFIED,STUDENT_EXAM_ATTEMPT,STUDENT_ALLERGIES) values ('947681B9FB4144A282DEFCEC70A23624','Preet','Saab','#64 AV.','ABC','EFZ ABC','821',to_timestamp('10-11-24 4:49:14.245000000 PM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),to_timestamp('24-11-24 1:30:46.535000000 PM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),26,'MILK');
Insert into PROJECT1.STUDENTS (STUDENT_ID,STUDENT_FIRST_NAME,STUDENT_LAST_NAME,STUDENT_ADDRESS,STUDENT_CITY,STUDENT_POSTAL_CODE,STUDENT_NUMBER,STUDENT_CREATED,STUDENT_MODIFIED,STUDENT_EXAM_ATTEMPT,STUDENT_ALLERGIES) values ('812DA0DA5AD547E8903B639DB6456976','Gurmukh','Singh','801 Appp','XYZ','GHI JKL','811',to_timestamp('10-11-24 4:49:14.250000000 PM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),to_timestamp('24-11-24 1:30:46.531000000 PM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),4,'Not have any Allergies');
Insert into PROJECT1.STUDENTS (STUDENT_ID,STUDENT_FIRST_NAME,STUDENT_LAST_NAME,STUDENT_ADDRESS,STUDENT_CITY,STUDENT_POSTAL_CODE,STUDENT_NUMBER,STUDENT_CREATED,STUDENT_MODIFIED,STUDENT_EXAM_ATTEMPT,STUDENT_ALLERGIES) values ('99E380A37CE54EECA230EEF81E24334D','Harman','Preet','ABC AV.','EFG City','OOP 251','816',to_timestamp('24-11-24 11:49:10.222000000 AM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),to_timestamp('24-11-24 1:30:46.533000000 PM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),null,'Not have any Allergies');
Insert into PROJECT1.STUDENTS (STUDENT_ID,STUDENT_FIRST_NAME,STUDENT_LAST_NAME,STUDENT_ADDRESS,STUDENT_CITY,STUDENT_POSTAL_CODE,STUDENT_NUMBER,STUDENT_CREATED,STUDENT_MODIFIED,STUDENT_EXAM_ATTEMPT,STUDENT_ALLERGIES) values ('33E29EEFF6164272B49EA4BBB7C906EB','ACBC','CAX','XAA','AAS','AAS','PUPIL_831',to_timestamp('24-11-24 1:36:54.050000000 PM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),to_timestamp('24-11-24 1:41:27.298000000 PM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),null,'Not have any Allergies');
Insert into PROJECT1.STUDENTS (STUDENT_ID,STUDENT_FIRST_NAME,STUDENT_LAST_NAME,STUDENT_ADDRESS,STUDENT_CITY,STUDENT_POSTAL_CODE,STUDENT_NUMBER,STUDENT_CREATED,STUDENT_MODIFIED,STUDENT_EXAM_ATTEMPT,STUDENT_ALLERGIES) values ('DA41B094C9B34A71BB54E8F22B37C262','Sukhan','jeet','7181 AV.','Montreal','123456','PUPIL_886',to_timestamp('24-11-24 5:27:44.972000000 PM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),to_timestamp('24-11-24 5:27:44.972000000 PM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),null,'PEANUTS');
Insert into PROJECT1.STUDENTS (STUDENT_ID,STUDENT_FIRST_NAME,STUDENT_LAST_NAME,STUDENT_ADDRESS,STUDENT_CITY,STUDENT_POSTAL_CODE,STUDENT_NUMBER,STUDENT_CREATED,STUDENT_MODIFIED,STUDENT_EXAM_ATTEMPT,STUDENT_ALLERGIES) values ('EE50B5ECB6D240DB96784BDC2C2A7E2D','Sukhan','jeet','7181 AV.','Montreal','123456','PUPIL_891',to_timestamp('24-11-24 5:31:00.359000000 PM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),to_timestamp('24-11-24 5:31:00.359000000 PM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),null,'PEANUTS');
REM INSERTING into PROJECT1.TEACHERS
SET DEFINE OFF;
Insert into PROJECT1.TEACHERS (TEACHER_ID,TEACHER_FIRST_NAME,TEACHER_LAST_NAME,TEACHER_EMAIL,TEACHER_SALARY,TEACHER_CREATED,TEACHER_MODIFIED,TEACHER_SIN,TEACHER_INSURANCE_PAY) values ('41CDF9A601BC44E4A5D6B47F780417D7','John','Freddi','j.freddi@test.com',32,to_timestamp('10-11-24 4:56:27.608000000 PM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),to_timestamp('24-11-24 1:22:24.337000000 AM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),null,1.5);
Insert into PROJECT1.TEACHERS (TEACHER_ID,TEACHER_FIRST_NAME,TEACHER_LAST_NAME,TEACHER_EMAIL,TEACHER_SALARY,TEACHER_CREATED,TEACHER_MODIFIED,TEACHER_SIN,TEACHER_INSURANCE_PAY) values ('1EC45652974141EAAA45A399677FD706','Sukhdev','Singh','s.dev@test.com',35,to_timestamp('10-11-24 4:56:27.613000000 PM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),to_timestamp('24-11-24 1:22:24.339000000 AM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),null,1.8);
Insert into PROJECT1.TEACHERS (TEACHER_ID,TEACHER_FIRST_NAME,TEACHER_LAST_NAME,TEACHER_EMAIL,TEACHER_SALARY,TEACHER_CREATED,TEACHER_MODIFIED,TEACHER_SIN,TEACHER_INSURANCE_PAY) values ('CE61B6286D344CBE9342369677CCF4D1','Bill','Torvalds','b.torvalds@.test.com',28,to_timestamp('10-11-24 4:56:27.617000000 PM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),to_timestamp('24-11-24 1:22:24.342000000 AM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),null,1.2);
REM INSERTING into PROJECT1.TIMESHEETS
SET DEFINE OFF;
Insert into PROJECT1.TIMESHEETS (TIMESHEET_ID,TIMESHEET_WEEKSTART,TEACHER_ID,TIMESHEET_WORKED_HOURS,TIMESHEET_CREATED,TIMESHEET_MODIFIED) values ('F5765EC8DB28408793ED589B28996AF0',to_date('10-11-24','DD-MM-RR'),'41CDF9A601BC44E4A5D6B47F780417D7',35,to_timestamp('10-11-24 6:43:43.415000000 PM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),to_timestamp('24-11-24 1:35:40.280000000 AM','DD-MM-RR fmHH12:fmMI:SSXFF AM'));
Insert into PROJECT1.TIMESHEETS (TIMESHEET_ID,TIMESHEET_WEEKSTART,TEACHER_ID,TIMESHEET_WORKED_HOURS,TIMESHEET_CREATED,TIMESHEET_MODIFIED) values ('55965F2FDE184B6591E1545E0435BE35',to_date('15-11-24','DD-MM-RR'),'41CDF9A601BC44E4A5D6B47F780417D7',45,to_timestamp('10-11-24 5:29:07.423000000 PM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),to_timestamp('24-11-24 1:36:43.358000000 AM','DD-MM-RR fmHH12:fmMI:SSXFF AM'));
Insert into PROJECT1.TIMESHEETS (TIMESHEET_ID,TIMESHEET_WEEKSTART,TEACHER_ID,TIMESHEET_WORKED_HOURS,TIMESHEET_CREATED,TIMESHEET_MODIFIED) values ('5E1AC6DDF32A44659ED7545A0ED20994',to_date('10-11-24','DD-MM-RR'),'41CDF9A601BC44E4A5D6B47F780417D7',35,to_timestamp('24-11-24 1:29:58.665000000 AM','DD-MM-RR fmHH12:fmMI:SSXFF AM'),to_timestamp('24-11-24 1:35:40.280000000 AM','DD-MM-RR fmHH12:fmMI:SSXFF AM'));
--------------------------------------------------------
--  DDL for Index COURSES_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "PROJECT1"."COURSES_PK" ON "PROJECT1"."COURSES" ("COURSE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index COURSE_CODE_UNIQUE
--------------------------------------------------------

  CREATE UNIQUE INDEX "PROJECT1"."COURSE_CODE_UNIQUE" ON "PROJECT1"."COURSES" ("COURSE_CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index HISTORY_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "PROJECT1"."HISTORY_PK" ON "PROJECT1"."HISTORY" ("HISTORY_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index REPORTS_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "PROJECT1"."REPORTS_PK" ON "PROJECT1"."REPORTS" ("REPORT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index STUDENTS_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "PROJECT1"."STUDENTS_PK" ON "PROJECT1"."STUDENTS" ("STUDENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index STUDENTS_UK_STUDENT_NUMBER
--------------------------------------------------------

  CREATE UNIQUE INDEX "PROJECT1"."STUDENTS_UK_STUDENT_NUMBER" ON "PROJECT1"."STUDENTS" ("STUDENT_NUMBER") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index TEACHERS_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "PROJECT1"."TEACHERS_PK" ON "PROJECT1"."TEACHERS" ("TEACHER_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index TEACHERS_UK_SIN
--------------------------------------------------------

  CREATE UNIQUE INDEX "PROJECT1"."TEACHERS_UK_SIN" ON "PROJECT1"."TEACHERS" ("TEACHER_SIN") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index TIMESHEETS_INDEX_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "PROJECT1"."TIMESHEETS_INDEX_PK" ON "PROJECT1"."TIMESHEETS" ("TIMESHEET_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index COURSES_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "PROJECT1"."COURSES_PK" ON "PROJECT1"."COURSES" ("COURSE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index COURSE_CODE_UNIQUE
--------------------------------------------------------

  CREATE UNIQUE INDEX "PROJECT1"."COURSE_CODE_UNIQUE" ON "PROJECT1"."COURSES" ("COURSE_CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index HISTORY_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "PROJECT1"."HISTORY_PK" ON "PROJECT1"."HISTORY" ("HISTORY_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index REPORTS_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "PROJECT1"."REPORTS_PK" ON "PROJECT1"."REPORTS" ("REPORT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index STUDENTS_UK_STUDENT_NUMBER
--------------------------------------------------------

  CREATE UNIQUE INDEX "PROJECT1"."STUDENTS_UK_STUDENT_NUMBER" ON "PROJECT1"."STUDENTS" ("STUDENT_NUMBER") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index STUDENTS_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "PROJECT1"."STUDENTS_PK" ON "PROJECT1"."STUDENTS" ("STUDENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index TEACHERS_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "PROJECT1"."TEACHERS_PK" ON "PROJECT1"."TEACHERS" ("TEACHER_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index TEACHERS_UK_SIN
--------------------------------------------------------

  CREATE UNIQUE INDEX "PROJECT1"."TEACHERS_UK_SIN" ON "PROJECT1"."TEACHERS" ("TEACHER_SIN") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index TIMESHEETS_INDEX_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "PROJECT1"."TIMESHEETS_INDEX_PK" ON "PROJECT1"."TIMESHEETS" ("TIMESHEET_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Trigger TRIGGER_COURSES_AUTO_ID
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "PROJECT1"."TRIGGER_COURSES_AUTO_ID" 
BEFORE INSERT OR UPDATE ON COURSES 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.COURSE_ID IS NULL THEN
      SELECT SEQUENCE_COURSES.NEXTVAL INTO :NEW.COURSE_ID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "PROJECT1"."TRIGGER_COURSES_AUTO_ID" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRIGGER_COURSES_UPDATE
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "PROJECT1"."TRIGGER_COURSES_UPDATE" 
BEFORE UPDATE ON COURSES
FOR EACH ROW 
BEGIN
---Save updation Date & Time---
 :NEW.COURSE_MODIFIED := CURRENT_TIMESTAMP;
END;

-- Revision history:
-- 23-11-2024 Add Trigeer for Time Updation in Modified (Forgot in Project 1)
/
ALTER TRIGGER "PROJECT1"."TRIGGER_COURSES_UPDATE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRIGGER_COURSE_INSERT_DELETE
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "PROJECT1"."TRIGGER_COURSE_INSERT_DELETE" 
AFTER INSERT OR DELETE ON COURSES
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        DBMS_OUTPUT.PUT_LINE('Course "' || :NEW.COURSE_NAME || '" was added on ' || TO_CHAR(SYSDATE, 'YYYY/MM/DD'));
    ELSIF DELETING THEN
        DBMS_OUTPUT.PUT_LINE('Course "' || :OLD.COURSE_NAME || '" was deleted on ' || TO_CHAR(SYSDATE, 'YYYY/MM/DD'));
    END IF;
END;
/
ALTER TRIGGER "PROJECT1"."TRIGGER_COURSE_INSERT_DELETE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRIGGER_ERROR_FUTURE_EXAM
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "PROJECT1"."TRIGGER_ERROR_FUTURE_EXAM" 
BEFORE INSERT OR UPDATE OF REPORT_EXAM_DATE ON REPORTS 
FOR EACH ROW 
DECLARE
FORMAT_DATE_EXAM VARCHAR2(200);
FUTURE_DATE EXCEPTION;
BEGIN
---Match Date & Time with system date and time---
FORMAT_DATE_EXAM := TO_CHAR(:NEW.REPORT_EXAM_DATE, 'DD-MM-YYYY');
  IF :NEW.REPORT_EXAM_DATE > SYSDATE THEN
        RAISE_APPLICATION_ERROR(-20801, 'Exam date ' || TO_CHAR(:NEW.REPORT_EXAM_DATE, ' DD-MONTH-YYYY ') || ' cannot be in the future.');
    END IF;
END;
-- Revision history:
-- Project 3 Error While Exam date in Future
/
ALTER TRIGGER "PROJECT1"."TRIGGER_ERROR_FUTURE_EXAM" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRIGGER_REPORTS_UPDATE
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "PROJECT1"."TRIGGER_REPORTS_UPDATE" 
BEFORE UPDATE ON REPORTS 
FOR EACH ROW 
BEGIN
    -- Log changes for REPORT_RESULT field
    IF :OLD.REPORT_RESULT != :NEW.REPORT_RESULT THEN
        INSERT INTO HISTORY
        (REPORT_ID, HISTORY_FIELD_NAME, OLD_VALUE, NEW_VALUE)
        VALUES (:OLD.REPORT_ID, 'REPORT_RESULT', TO_CHAR(:OLD.REPORT_RESULT), TO_CHAR(:NEW.REPORT_RESULT));
    END IF;
    
     -- Log changes for STUDENT_ID field
    IF :OLD.STUDENT_ID != :NEW.STUDENT_ID THEN
        INSERT INTO HISTORY
        (REPORT_ID, HISTORY_FIELD_NAME, OLD_VALUE, NEW_VALUE)
        VALUES (:OLD.REPORT_ID, 'STUDENT_ID', :OLD.STUDENT_ID, :NEW.STUDENT_ID);
    END IF;
    
    -- Log changes for TEACHER_ID field
    IF :OLD.TEACHER_ID != :NEW.TEACHER_ID THEN
        INSERT INTO HISTORY
        (REPORT_ID, HISTORY_FIELD_NAME, OLD_VALUE, NEW_VALUE)
        VALUES (:OLD.REPORT_ID, 'TEACHER_ID', :OLD.TEACHER_ID, :NEW.TEACHER_ID);
    END IF;
    
    -- Log changes for REPORT_COMMENTS field
    IF :OLD.REPORT_COMMENTS != :NEW.REPORT_COMMENTS THEN
        INSERT INTO HISTORY
        (REPORT_ID, HISTORY_FIELD_NAME, OLD_VALUE, NEW_VALUE)
        VALUES (:OLD.REPORT_ID, 'REPORT_COMMENTS', :OLD.REPORT_COMMENTS, :NEW.REPORT_COMMENTS);
    END IF;
    
---Save updation Date & Time---
 :NEW.REPORT_MODIFIED := CURRENT_TIMESTAMP;
END;

-- Revision history:
-- Add Trigger for Time Updation in Modified (Forgot in Project 1)
-- Updation in this Trigger as Trigger for Tracking Report Updates
/
ALTER TRIGGER "PROJECT1"."TRIGGER_REPORTS_UPDATE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRIGGER_STUDENTS_UPDATE
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "PROJECT1"."TRIGGER_STUDENTS_UPDATE" 
BEFORE UPDATE ON STUDENTS
FOR EACH ROW 
BEGIN
---Save updation Date & Time---
 :NEW.STUDENT_MODIFIED := CURRENT_TIMESTAMP;

END;

-- Revision history:
-- 23-11-2024 Add Trigeer for Time Updation in Modified (Forgot in Project 1)
/
ALTER TRIGGER "PROJECT1"."TRIGGER_STUDENTS_UPDATE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRIGGER_TEACHERS_UPDATE
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "PROJECT1"."TRIGGER_TEACHERS_UPDATE" 
BEFORE UPDATE ON TEACHERS
FOR EACH ROW 
BEGIN
---Save updation Date & Time---
 :NEW.TEACHER_MODIFIED := CURRENT_TIMESTAMP;
END;

-- Revision history:
-- 23-11-2024 Add Trigeer for Time Updation in Modified (Forgot in Project 1)
/
ALTER TRIGGER "PROJECT1"."TRIGGER_TEACHERS_UPDATE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRIGGER_TIMESHEETS_UPDATE
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "PROJECT1"."TRIGGER_TIMESHEETS_UPDATE" 
BEFORE UPDATE ON TIMESHEETS
FOR EACH ROW 
BEGIN
---Save updation Date & Time---
 :NEW.TIMESHEET_MODIFIED := CURRENT_TIMESTAMP;
END;

-- Revision history:
-- Add Trigeer for Time Updation in Modified
/
ALTER TRIGGER "PROJECT1"."TRIGGER_TIMESHEETS_UPDATE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRIGGER_UPDATE_RESULT
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "PROJECT1"."TRIGGER_UPDATE_RESULT" 
AFTER INSERT ON REPORTS
FOR EACH ROW 
BEGIN
    UPDATE STUDENTS
    SET STUDENT_EXAM_ATTEMPT = NVL(STUDENT_EXAM_ATTEMPT, 0) + 1
    WHERE STUDENT_ID = :NEW.STUDENT_ID;
END;
--Revision History
---- Trigger to increment exam tries whenever a new report is added
/
ALTER TRIGGER "PROJECT1"."TRIGGER_UPDATE_RESULT" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRIRGGER_STUDENT_NUMBER
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "PROJECT1"."TRIRGGER_STUDENT_NUMBER" 
BEFORE INSERT OR UPDATE ON STUDENTS 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING OR UPDATING THEN
      SELECT 'PUPIL_' ||SEQUENCE_STUDENTS.NEXTVAL INTO :NEW.STUDENT_NUMBER FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "PROJECT1"."TRIRGGER_STUDENT_NUMBER" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRIGGER_COURSE_INSERT_DELETE
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "PROJECT1"."TRIGGER_COURSE_INSERT_DELETE" 
AFTER INSERT OR DELETE ON COURSES
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        DBMS_OUTPUT.PUT_LINE('Course "' || :NEW.COURSE_NAME || '" was added on ' || TO_CHAR(SYSDATE, 'YYYY/MM/DD'));
    ELSIF DELETING THEN
        DBMS_OUTPUT.PUT_LINE('Course "' || :OLD.COURSE_NAME || '" was deleted on ' || TO_CHAR(SYSDATE, 'YYYY/MM/DD'));
    END IF;
END;
/
ALTER TRIGGER "PROJECT1"."TRIGGER_COURSE_INSERT_DELETE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRIGGER_COURSES_AUTO_ID
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "PROJECT1"."TRIGGER_COURSES_AUTO_ID" 
BEFORE INSERT OR UPDATE ON COURSES 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.COURSE_ID IS NULL THEN
      SELECT SEQUENCE_COURSES.NEXTVAL INTO :NEW.COURSE_ID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "PROJECT1"."TRIGGER_COURSES_AUTO_ID" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRIGGER_COURSES_UPDATE
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "PROJECT1"."TRIGGER_COURSES_UPDATE" 
BEFORE UPDATE ON COURSES
FOR EACH ROW 
BEGIN
---Save updation Date & Time---
 :NEW.COURSE_MODIFIED := CURRENT_TIMESTAMP;
END;

-- Revision history:
-- 23-11-2024 Add Trigeer for Time Updation in Modified (Forgot in Project 1)
/
ALTER TRIGGER "PROJECT1"."TRIGGER_COURSES_UPDATE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRIGGER_REPORTS_UPDATE
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "PROJECT1"."TRIGGER_REPORTS_UPDATE" 
BEFORE UPDATE ON REPORTS 
FOR EACH ROW 
BEGIN
    -- Log changes for REPORT_RESULT field
    IF :OLD.REPORT_RESULT != :NEW.REPORT_RESULT THEN
        INSERT INTO HISTORY
        (REPORT_ID, HISTORY_FIELD_NAME, OLD_VALUE, NEW_VALUE)
        VALUES (:OLD.REPORT_ID, 'REPORT_RESULT', TO_CHAR(:OLD.REPORT_RESULT), TO_CHAR(:NEW.REPORT_RESULT));
    END IF;
    
     -- Log changes for STUDENT_ID field
    IF :OLD.STUDENT_ID != :NEW.STUDENT_ID THEN
        INSERT INTO HISTORY
        (REPORT_ID, HISTORY_FIELD_NAME, OLD_VALUE, NEW_VALUE)
        VALUES (:OLD.REPORT_ID, 'STUDENT_ID', :OLD.STUDENT_ID, :NEW.STUDENT_ID);
    END IF;
    
    -- Log changes for TEACHER_ID field
    IF :OLD.TEACHER_ID != :NEW.TEACHER_ID THEN
        INSERT INTO HISTORY
        (REPORT_ID, HISTORY_FIELD_NAME, OLD_VALUE, NEW_VALUE)
        VALUES (:OLD.REPORT_ID, 'TEACHER_ID', :OLD.TEACHER_ID, :NEW.TEACHER_ID);
    END IF;
    
    -- Log changes for REPORT_COMMENTS field
    IF :OLD.REPORT_COMMENTS != :NEW.REPORT_COMMENTS THEN
        INSERT INTO HISTORY
        (REPORT_ID, HISTORY_FIELD_NAME, OLD_VALUE, NEW_VALUE)
        VALUES (:OLD.REPORT_ID, 'REPORT_COMMENTS', :OLD.REPORT_COMMENTS, :NEW.REPORT_COMMENTS);
    END IF;
    
---Save updation Date & Time---
 :NEW.REPORT_MODIFIED := CURRENT_TIMESTAMP;
END;

-- Revision history:
-- Add Trigger for Time Updation in Modified (Forgot in Project 1)
-- Updation in this Trigger as Trigger for Tracking Report Updates
/
ALTER TRIGGER "PROJECT1"."TRIGGER_REPORTS_UPDATE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRIGGER_UPDATE_RESULT
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "PROJECT1"."TRIGGER_UPDATE_RESULT" 
AFTER INSERT ON REPORTS
FOR EACH ROW 
BEGIN
    UPDATE STUDENTS
    SET STUDENT_EXAM_ATTEMPT = NVL(STUDENT_EXAM_ATTEMPT, 0) + 1
    WHERE STUDENT_ID = :NEW.STUDENT_ID;
END;
--Revision History
---- Trigger to increment exam tries whenever a new report is added
/
ALTER TRIGGER "PROJECT1"."TRIGGER_UPDATE_RESULT" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRIGGER_ERROR_FUTURE_EXAM
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "PROJECT1"."TRIGGER_ERROR_FUTURE_EXAM" 
BEFORE INSERT OR UPDATE OF REPORT_EXAM_DATE ON REPORTS 
FOR EACH ROW 
DECLARE
FORMAT_DATE_EXAM VARCHAR2(200);
FUTURE_DATE EXCEPTION;
BEGIN
---Match Date & Time with system date and time---
FORMAT_DATE_EXAM := TO_CHAR(:NEW.REPORT_EXAM_DATE, 'DD-MM-YYYY');
  IF :NEW.REPORT_EXAM_DATE > SYSDATE THEN
        RAISE_APPLICATION_ERROR(-20801, 'Exam date ' || TO_CHAR(:NEW.REPORT_EXAM_DATE, ' DD-MONTH-YYYY ') || ' cannot be in the future.');
    END IF;
END;
-- Revision history:
-- Project 3 Error While Exam date in Future
/
ALTER TRIGGER "PROJECT1"."TRIGGER_ERROR_FUTURE_EXAM" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRIGGER_STUDENTS_UPDATE
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "PROJECT1"."TRIGGER_STUDENTS_UPDATE" 
BEFORE UPDATE ON STUDENTS
FOR EACH ROW 
BEGIN
---Save updation Date & Time---
 :NEW.STUDENT_MODIFIED := CURRENT_TIMESTAMP;

END;

-- Revision history:
-- 23-11-2024 Add Trigeer for Time Updation in Modified (Forgot in Project 1)
/
ALTER TRIGGER "PROJECT1"."TRIGGER_STUDENTS_UPDATE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRIRGGER_STUDENT_NUMBER
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "PROJECT1"."TRIRGGER_STUDENT_NUMBER" 
BEFORE INSERT OR UPDATE ON STUDENTS 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING OR UPDATING THEN
      SELECT 'PUPIL_' ||SEQUENCE_STUDENTS.NEXTVAL INTO :NEW.STUDENT_NUMBER FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "PROJECT1"."TRIRGGER_STUDENT_NUMBER" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRIGGER_TEACHERS_UPDATE
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "PROJECT1"."TRIGGER_TEACHERS_UPDATE" 
BEFORE UPDATE ON TEACHERS
FOR EACH ROW 
BEGIN
---Save updation Date & Time---
 :NEW.TEACHER_MODIFIED := CURRENT_TIMESTAMP;
END;

-- Revision history:
-- 23-11-2024 Add Trigeer for Time Updation in Modified (Forgot in Project 1)
/
ALTER TRIGGER "PROJECT1"."TRIGGER_TEACHERS_UPDATE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRIGGER_TIMESHEETS_UPDATE
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "PROJECT1"."TRIGGER_TIMESHEETS_UPDATE" 
BEFORE UPDATE ON TIMESHEETS
FOR EACH ROW 
BEGIN
---Save updation Date & Time---
 :NEW.TIMESHEET_MODIFIED := CURRENT_TIMESTAMP;
END;

-- Revision history:
-- Add Trigeer for Time Updation in Modified
/
ALTER TRIGGER "PROJECT1"."TRIGGER_TIMESHEETS_UPDATE" ENABLE;
--------------------------------------------------------
--  DDL for Procedure COURSE_DELETE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "PROJECT1"."COURSE_DELETE" (
  PARAM_COURSE_ID IN CHAR 
) AS 
BEGIN
  DELETE FROM COURSES
  WHERE COURSE_ID = PARAM_COURSE_ID;
  
DBMS_OUTPUT.PUT_LINE('Course with ID ' || PARAM_COURSE_ID || ' was deleted.');
END COURSE_DELETE;

/
--------------------------------------------------------
--  DDL for Procedure COURSE_INSERT
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "PROJECT1"."COURSE_INSERT" 
(
    PARAM_COURSE_NAME IN VARCHAR2,
    PARAM_COURSE_DESCRIPTION IN VARCHAR2,
    PARAM_COURSE_CODE IN VARCHAR2,
    PARAM_COURSE_ID OUT NUMBER
)
AS 
    VARIABLE_COURSE_NAME VARCHAR2(25 BYTE);
BEGIN
    -- Assign the course name to the variable
    VARIABLE_COURSE_NAME := PARAM_COURSE_NAME;

    -- Check if the course name starts with 'MS'
    IF SUBSTR(UPPER(VARIABLE_COURSE_NAME), 1, 2) = 'MS' THEN
        VARIABLE_COURSE_NAME := REGEXP_REPLACE(VARIABLE_COURSE_NAME, 'MS', 'MICROSOFT WORD', 1, 1, 'i');
    END IF;

    -- Insert a new record into the COURSES table
    INSERT INTO COURSES (COURSE_NAME, COURSE_DESCRIPTION, COURSE_CODE)
    VALUES (
    VARIABLE_COURSE_NAME, 
    PARAM_COURSE_DESCRIPTION, 
    PARAM_COURSE_CODE)
    RETURNING COURSE_ID INTO PARAM_COURSE_ID;  -- Assuming course_id is auto-incremented
    
    DBMS_OUTPUT.PUT_LINE('Course "' || VARIABLE_COURSE_NAME || '" was added.');

EXCEPTION
    WHEN OTHERS THEN
        RAISE_APPLICATION_ERROR(-20801, 'Error inserting course: ' || SQLERRM);
END COURSE_INSERT;

/
--------------------------------------------------------
--  DDL for Procedure REPORT_DELETE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "PROJECT1"."REPORT_DELETE" (
  PARAM_REPORT_ID IN CHAR 
) AS 
BEGIN
  DELETE FROM REPORTS
  WHERE REPORT_ID = PARAM_REPORT_ID;
END REPORT_DELETE;

/
--------------------------------------------------------
--  DDL for Procedure REPORT_DELETE_WITHOUT_PK
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "PROJECT1"."REPORT_DELETE_WITHOUT_PK" 
(
  PARAM_STUDENT_ID IN CHAR 
  ,PARAM_TEACHER_ID IN CHAR
) AS 
BEGIN
  DELETE FROM REPORTS
  WHERE STUDENT_ID = PARAM_STUDENT_ID
  AND TEACHER_ID = PARAM_TEACHER_ID;
END REPORT_DELETE_WITHOUT_PK;

/
--------------------------------------------------------
--  DDL for Procedure REPORT_INSERT
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "PROJECT1"."REPORT_INSERT" 
(PARAM_REPORT_RESULT IN NUMBER
,PARAM_REPORT_COMMENTS IN VARCHAR2
,PARAM_STUDENT_ID IN CHAR
,PARAM_TEACHER_ID IN CHAR
,PARAM_REPORT_EXAM_DATE IN DATE
)
AS 
RESULT_COUNT NUMBER;
BEGIN
---Modify with Procedure with Limit Check Result Count

---count reports for the students
 SELECT COUNT(*) INTO RESULT_COUNT
    FROM REPORTS
    WHERE STUDENT_ID = PARAM_STUDENT_ID;

--check the limit
IF RESULT_COUNT >= 20 THEN
RAISE_APPLICATION_ERROR(-20701,'Student'||PARAM_STUDENT_ID||'has reached the maximum number of courses.');
ELSE
-- Insert a new record into the REPORT table
  INSERT INTO REPORTS(REPORT_RESULT, REPORT_COMMENTS, STUDENT_ID, TEACHER_ID, REPORT_EXAM_DATE)
  VALUES 
(PARAM_REPORT_RESULT
,PARAM_REPORT_COMMENTS
,PARAM_STUDENT_ID
,PARAM_TEACHER_ID
,PARAM_REPORT_EXAM_DATE
);
RESULT_COUNT:= 'Report successfully inserted for Student ' || PARAM_STUDENT_ID;
END IF;
END REPORT_INSERT;

/
--------------------------------------------------------
--  DDL for Procedure REPORT_UPDATE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "PROJECT1"."REPORT_UPDATE" (PARAM_REPORT_ID IN VARCHAR2
,PARAM_REPORT_RESULT IN NUMBER
,PARAM_REPORT_COMMENTS IN VARCHAR2
,PARAM_STUDENT_ID IN VARCHAR2
,PARAM_TEACHER_ID IN VARCHAR2
,PARAM_REPORT_EXAM_DATE IN DATE
)
AS 
BEGIN
  ---UPDATE TO Reports-----
  UPDATE REPORTS
  SET
  REPORT_RESULT = PARAM_REPORT_RESULT
  ,REPORT_COMMENTS = PARAM_REPORT_COMMENTS
  , STUDENT_ID = PARAM_STUDENT_ID
  , TEACHER_ID = PARAM_TEACHER_ID
  , REPORT_EXAM_DATE = PARAM_REPORT_EXAM_DATE
  WHERE REPORT_ID = PARAM_REPORT_ID;
END REPORT_UPDATE;

/
--------------------------------------------------------
--  DDL for Procedure STUDENTS_INSERT
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "PROJECT1"."STUDENTS_INSERT" 
(
    PARAM_STUDENT_FIRST_NAME IN VARCHAR2,
    PARAM_STUDENT_LAST_NAME IN VARCHAR2,
    PARAM_STUDENT_ADDRESS IN VARCHAR2,
    PARAM_STUDENT_CITY IN VARCHAR2,
    PARAM_STUDENT_POSTAL_CODE IN VARCHAR2,
    PARAM_STUDENT_NUMBER IN VARCHAR2,
    PARAM_STUDENT_ALLERGIES IN VARCHAR2
) AS 
    VARIABLE_ALLERGIES VARCHAR2(200); -- Declare variable at the beginning
BEGIN
    -- Initialize the variable with the original allergies
    VARIABLE_ALLERGIES := PARAM_STUDENT_ALLERGIES;

    -- Convert 'Peanuts' allergy to uppercase if present
    IF UPPER(PARAM_STUDENT_ALLERGIES) LIKE '%PEANUTS%' THEN
        VARIABLE_ALLERGIES := 'PEANUTS';
    END IF;           

    -- Insert a new record into the STUDENTS table
    INSERT INTO STUDENTS (STUDENT_FIRST_NAME, STUDENT_LAST_NAME, STUDENT_ADDRESS, STUDENT_CITY, STUDENT_POSTAL_CODE, STUDENT_NUMBER, STUDENT_ALLERGIES)
    VALUES (PARAM_STUDENT_FIRST_NAME,
            PARAM_STUDENT_LAST_NAME,
            PARAM_STUDENT_ADDRESS,
            PARAM_STUDENT_CITY,
            PARAM_STUDENT_POSTAL_CODE,
            PARAM_STUDENT_NUMBER,
            VARIABLE_ALLERGIES); -- Use the variable for allergies
-- Output success message
    DBMS_OUTPUT.PUT_LINE('Student "' || PARAM_STUDENT_FIRST_NAME || ' ' || PARAM_STUDENT_LAST_NAME || '" was added successfully.');

    -- Uncomment the following line if you want to roll back the transaction
    -- ROLLBACK; 
EXCEPTION
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('Error inserting student: ' || SQLERRM);

END STUDENTS_INSERT;
-- Revision history: 
-- Sarabjeet Singh (2411801) Created the STUDENT_INSERT procedure.
-- Sarabjeet Singh (2411801) Updated the STUDENT_INSERT procedure with allergies.

/
--------------------------------------------------------
--  DDL for Procedure STUDENTS_UPDATE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "PROJECT1"."STUDENTS_UPDATE" 
(
  PARAM_STUDENT_ID IN CHAR
,  PARAM_STUDENT_FIRST_NAME IN VARCHAR2 
, PARAM_STUDENT_LAST_NAME IN VARCHAR2 
, PARAM_STUDENT_ADDRESS IN VARCHAR2 
, PARAM_STUDENT_CITY IN VARCHAR2
, PARAM_STUDENT_POSTAL_CODE IN VARCHAR2
, PARAM_STUDENT_NUMBER IN VARCHAR2
) AS 
BEGIN
  ---Update Students Record-----
 UPDATE STUDENTS 
 SET
  STUDENT_FIRST_NAME = PARAM_STUDENT_FIRST_NAME
, STUDENT_LAST_NAME = PARAM_STUDENT_LAST_NAME  
, STUDENT_ADDRESS = PARAM_STUDENT_ADDRESS  
, STUDENT_CITY = PARAM_STUDENT_CITY
, STUDENT_POSTAL_CODE = PARAM_STUDENT_POSTAL_CODE
, STUDENT_NUMBER = PARAM_STUDENT_NUMBER
    WHERE STUDENT_ID = PARAM_STUDENT_ID;
END STUDENTS_UPDATE;

/
--------------------------------------------------------
--  DDL for Procedure STUDENT_DELETE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "PROJECT1"."STUDENT_DELETE" 
(
  PARAM_STUDENT_ID IN CHAR 
) AS 
BEGIN
  DELETE FROM STUDENTS
  WHERE STUDENT_ID = PARAM_STUDENT_ID;
END STUDENT_DELETE;

/
--------------------------------------------------------
--  DDL for Procedure TEACHERS_INSERT
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "PROJECT1"."TEACHERS_INSERT" 
(
  PARAM_TEACHER_FIRST_NAME IN VARCHAR2 
, PARAM_TEACHER_LAST_NAME IN VARCHAR2 
, PARAM_TEACHER_EMAIL IN VARCHAR2 
, PARAM_TEACHER_SALARY IN NUMBER
) AS 
BEGIN
  ---Insert One-----
  INSERT INTO TEACHERS(TEACHER_FIRST_NAME,TEACHER_LAST_NAME, TEACHER_EMAIL, TEACHER_SALARY)
  VALUES (PARAM_TEACHER_FIRST_NAME
, PARAM_TEACHER_LAST_NAME  
, PARAM_TEACHER_EMAIL  
, PARAM_TEACHER_SALARY);
END TEACHERS_INSERT;

/
--------------------------------------------------------
--  DDL for Procedure TEACHERS_UPDATE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "PROJECT1"."TEACHERS_UPDATE" 
(
    PARAM_TEACHER_ID IN CHAR
,  PARAM_TEACHER_FIRST_NAME IN VARCHAR2 
, PARAM_TEACHER_LAST_NAME IN VARCHAR2 
, PARAM_TEACHER_EMAIL IN VARCHAR2 
, PARAM_TEACHER_SALARY IN NUMBER
) AS 
BEGIN
  ---UPDATE TEACHER TABLE-----
  UPDATE TEACHERS
  SET
   TEACHER_FIRST_NAME = PARAM_TEACHER_FIRST_NAME
, TEACHER_LAST_NAME = PARAM_TEACHER_LAST_NAME  
, TEACHER_EMAIL = PARAM_TEACHER_EMAIL  
, TEACHER_SALARY = PARAM_TEACHER_SALARY
    WHERE TEACHER_ID = PARAM_TEACHER_ID;
END TEACHERS_UPDATE;

/
--------------------------------------------------------
--  DDL for Procedure TEACHER_DELETE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "PROJECT1"."TEACHER_DELETE" 
(
  PARAM_TEACHER_ID IN CHAR 
) AS 
BEGIN
  DELETE FROM TEACHERS
  WHERE TEACHER_ID = PARAM_TEACHER_ID;
END TEACHER_DELETE;

/
--------------------------------------------------------
--  DDL for Procedure TIMESHEETS_INSERT
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "PROJECT1"."TIMESHEETS_INSERT" 
(
PARAM_TIMESHEET_WEEKSTART IN DATE
,PARAM_TEACHER_ID IN CHAR
,PARAM_TIMESHEET_WORKED_HOURS IN NUMBER
) AS 
BEGIN
           -- Insert a new record into the TIMESHEETS table
  INSERT INTO TIMESHEETS(TIMESHEET_WEEKSTART, TEACHER_ID, TIMESHEET_WORKED_HOURS )
  VALUES (PARAM_TIMESHEET_WEEKSTART
  ,PARAM_TEACHER_ID
  ,PARAM_TIMESHEET_WORKED_HOURS);
END TIMESHEETS_INSERT;

/
--------------------------------------------------------
--  DDL for Procedure TIMESHEET_DELETE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "PROJECT1"."TIMESHEET_DELETE" 
(
  PARAM_TIMESHEET_ID IN CHAR 
) 
AS 
BEGIN
           -- Delete a record from the TIMESHEETS table
  DELETE FROM TIMESHEETS
  WHERE TIMESHEET_ID = PARAM_TIMESHEET_ID;
END TIMESHEET_DELETE;

/
--------------------------------------------------------
--  DDL for Procedure TIMESHEET_DELETE_WITHOUT_PK
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "PROJECT1"."TIMESHEET_DELETE_WITHOUT_PK" (
  PARAM_TEACHER_ID IN CHAR
  ,PARAM_TIMESHEET_WEEKSTART IN DATE
) AS 
BEGIN
-- Delete a record from the TIMESHEETS table without PK
  DELETE FROM TIMESHEETS
  WHERE TEACHER_ID = PARAM_TEACHER_ID
  AND TIMESHEET_WEEKSTART = PARAM_TIMESHEET_WEEKSTART;
END TIMESHEET_DELETE_WITHOUT_PK;

/
--------------------------------------------------------
--  DDL for Procedure TIMESHEET_UPDATE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "PROJECT1"."TIMESHEET_UPDATE" (
PARAM_TIMESHEET_ID IN CHAR
,PARAM_TIMESHEET_WEEKSTART IN DATE
,PARAM_TEACHER_ID IN VARCHAR2
,PARAM_TIMESHEET_WORKED_HOURS IN NUMBER
) AS 
BEGIN
  ---UPDATE TIMESHEETS TABLE-----
  UPDATE TIMESHEETS
  SET
  TIMESHEET_WEEKSTART = PARAM_TIMESHEET_WEEKSTART
 , TEACHER_ID = PARAM_TEACHER_ID
 , TIMESHEET_WORKED_HOURS = PARAM_TIMESHEET_WORKED_HOURS
  WHERE TIMESHEET_ID = PARAM_TIMESHEET_ID;
END TIMESHEET_UPDATE;

/
--------------------------------------------------------
--  DDL for Function FUNCTION_CALCULATE_SALARY
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE FUNCTION "PROJECT1"."FUNCTION_CALCULATE_SALARY" (
    PARAM_WAGES_PER_HOUR IN NUMBER,
    PARAM_INSURANCE IN NUMBER,
    PARAM_HOURS_WORKED IN NUMBER
) 
RETURN NUMBER AS 
    VARIABLE_HOURLYRATE NUMBER;
    VARIABLE_PAYCHECK NUMBER;
BEGIN
    -- Calculate the effective hourly rate after insurance deduction
    VARIABLE_HOURLYRATE := PARAM_WAGES_PER_HOUR - PARAM_INSURANCE;

    -- Calculate the paycheck based on hours worked
    VARIABLE_PAYCHECK := VARIABLE_HOURLYRATE * PARAM_HOURS_WORKED;

    -- Return the calculated paycheck
    RETURN VARIABLE_PAYCHECK;
END FUNCTION_CALCULATE_SALARY;

/
--------------------------------------------------------
--  DDL for Function REPORT_BY_STUDENT_ID
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE FUNCTION "PROJECT1"."REPORT_BY_STUDENT_ID" (
    PARAM_STUDENT_ID IN CHAR
)
RETURN TYPE_REPORT_TABLE_STUDENT_ID PIPELINED AS 
BEGIN
  --- Loop into my Table
    FOR CURRENT_ROW IN (
        SELECT REPORTS.REPORT_ID,STUDENTS.STUDENT_ID,STUDENTS.STUDENT_FIRST_NAME,STUDENTS.STUDENT_LAST_NAME,
        TEACHERS.TEACHER_ID,TEACHERS.TEACHER_FIRST_NAME,TEACHERS.TEACHER_LAST_NAME,
        REPORTS.REPORT_RESULT,REPORTS.REPORT_COMMENTS,REPORTS.REPORT_CREATED,REPORTS.REPORT_MODIFIED,REPORTS.REPORT_EXAM_DATE
        FROM REPORTS
        ---INNER JOIN FOR FETCH DATA FROM TEAHCERS TABLE
        INNER JOIN STUDENTS
        ON STUDENTS.STUDENT_ID = REPORTS.STUDENT_ID
        INNER JOIN TEACHERS
        ON TEACHERS.TEACHER_ID = REPORTS.TEACHER_ID
        WHERE STUDENTS.STUDENT_ID = PARAM_STUDENT_ID
        -- Sort from most recent to oldest
        ORDER BY REPORT_EXAM_DATE DESC
    )
    LOOP
            PIPE ROW(
                TYPE_REPORT_ROW_STUDENT_ID(
                    CURRENT_ROW.REPORT_ID	
                    ,CURRENT_ROW.REPORT_RESULT	
                    ,CURRENT_ROW.REPORT_COMMENTS	
                    ,CURRENT_ROW.REPORT_CREATED	
                    ,CURRENT_ROW.REPORT_MODIFIED
                    ,CURRENT_ROW.STUDENT_ID	
                    ,CURRENT_ROW.STUDENT_FIRST_NAME 
                    ,CURRENT_ROW.STUDENT_LAST_NAME 
                    ,CURRENT_ROW.TEACHER_FIRST_NAME 
                    ,CURRENT_ROW.TEACHER_LAST_NAME
                    ,CURRENT_ROW.TEACHER_ID	
                    ,CURRENT_ROW.REPORT_EXAM_DATE)
            );
    END LOOP;

END REPORT_BY_STUDENT_ID;
-- Revision history:
-- Sarabjeet Singh (2411801) Created the REPORT_BY__ID function.

/
--------------------------------------------------------
--  DDL for Function STUDENTS_SELECT_ALL
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE FUNCTION "PROJECT1"."STUDENTS_SELECT_ALL" 
RETURN TYPE_STUDENTS_ENTIRE_TABLE PIPELINED AS 
BEGIN
    -- Loop through all records in the STUDENTS table and return them
FOR CURRENT_ROW IN(
     SELECT STUDENT_ID,STUDENT_FIRST_NAME,STUDENT_LAST_NAME,STUDENT_ADDRESS,STUDENT_CITY,
STUDENT_POSTAL_CODE,STUDENT_NUMBER,STUDENT_CREATED,STUDENT_MODIFIED 
     FROM STUDENTS 
     ORDER BY STUDENT_FIRST_NAME)
     LOOP
    PIPE ROW(TYPE_STUDENTS_ONE_ROW(CURRENT_ROW.STUDENT_ID, CURRENT_ROW.STUDENT_FIRST_NAME,CURRENT_ROW.STUDENT_LAST_NAME,
            CURRENT_ROW.STUDENT_ADDRESS, CURRENT_ROW.STUDENT_CITY, CURRENT_ROW.STUDENT_POSTAL_CODE,
            CURRENT_ROW.STUDENT_NUMBER,CURRENT_ROW.STUDENT_CREATED,CURRENT_ROW.STUDENT_MODIFIED));
    END LOOP;
END STUDENTS_SELECT_ALL;
-- Revision history:
-- Sarabjeet Singh (2411801) Created the STUDENTS_SELECT_ALL function.

/
--------------------------------------------------------
--  DDL for Function STUDENT_SELECT_ONE_BY_ID
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE FUNCTION "PROJECT1"."STUDENT_SELECT_ONE_BY_ID" 
(
    PARAM_STUDENT_ID IN CHAR
)
RETURN
TYPE_STUDENTS_ENTIRE_TABLE PIPELINED AS
BEGIN
-- Loop into my table
FOR EACH_ROW IN (SELECT STUDENT_ID,STUDENT_FIRST_NAME,STUDENT_LAST_NAME,STUDENT_ADDRESS,STUDENT_CITY,
STUDENT_POSTAL_CODE,STUDENT_NUMBER,STUDENT_CREATED,STUDENT_MODIFIED FROM STUDENTS
                    WHERE STUDENT_ID = PARAM_STUDENT_ID)
LOOP
      PIPE ROW (TYPE_STUDENTS_ONE_ROW (EACH_ROW.STUDENT_ID, EACH_ROW.STUDENT_FIRST_NAME,
        EACH_ROW.STUDENT_LAST_NAME,EACH_ROW.STUDENT_ADDRESS,EACH_ROW.STUDENT_CITY,EACH_ROW.STUDENT_POSTAL_CODE,
		EACH_ROW.STUDENT_NUMBER,EACH_ROW.STUDENT_CREATED,EACH_ROW.STUDENT_MODIFIED));
    END LOOP;
END STUDENT_SELECT_ONE_BY_ID;

/
--------------------------------------------------------
--  DDL for Function TEACHERS_SELECT_ALL
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE FUNCTION "PROJECT1"."TEACHERS_SELECT_ALL" 
RETURN TYPE_TEACHERS_ENTIRE_TABLE PIPELINED AS 
BEGIN
    -- Loop through all records in the TEACHERS table and return them
FOR CURRENT_ROW IN(
     SELECT TEACHER_ID,TEACHER_FIRST_NAME,TEACHER_LAST_NAME,TEACHER_EMAIL,
          TEACHER_SALARY,TEACHER_CREATED,TEACHER_MODIFIED 
     FROM TEACHERS 
     ORDER BY TEACHER_FIRST_NAME)
    LOOP
    PIPE ROW(TYPE_TEACHERS_ROW(CURRENT_ROW.TEACHER_ID, 
    CURRENT_ROW.TEACHER_FIRST_NAME,CURRENT_ROW.TEACHER_LAST_NAME,
            CURRENT_ROW.TEACHER_EMAIL, CURRENT_ROW.TEACHER_SALARY,
            CURRENT_ROW.TEACHER_CREATED,CURRENT_ROW.TEACHER_MODIFIED)
            );
    END LOOP;
END TEACHERS_SELECT_ALL;
-- Revision history:
-- Sarabjeet Singh (2411801) Created the TEACHERS_SELECT_ALL function.

/
--------------------------------------------------------
--  DDL for Function TEACHER_SELECT_ONE_BY_ID
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE FUNCTION "PROJECT1"."TEACHER_SELECT_ONE_BY_ID" 
(
    PARAM_TEACHER_ID IN CHAR
)
RETURN TYPE_TEACHERS_ENTIRE_TABLE PIPELINED AS 
BEGIN
  --- Loop into my Table
  FOR EACH_ROW IN (SELECT TEACHER_ID,TEACHER_FIRST_NAME,TEACHER_LAST_NAME,TEACHER_EMAIL,
					 TEACHER_SALARY,TEACHER_CREATED,TEACHER_MODIFIED FROM TEACHERS 
                     WHERE TEACHER_ID = PARAM_TEACHER_ID)
    LOOP
    PIPE ROW (TYPE_TEACHERS_ROW(EACH_ROW.TEACHER_ID, EACH_ROW.TEACHER_FIRST_NAME,EACH_ROW.TEACHER_LAST_NAME,
            EACH_ROW.TEACHER_EMAIL, EACH_ROW.TEACHER_SALARY, EACH_ROW.TEACHER_CREATED,
            EACH_ROW.TEACHER_MODIFIED));
    END LOOP;
END TEACHER_SELECT_ONE_BY_ID;

/
--------------------------------------------------------
--  DDL for Function TIMESHEET_SELECT_BY_ID
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE FUNCTION "PROJECT1"."TIMESHEET_SELECT_BY_ID" 
(
    PARAM_TIMESHEET_ID IN CHAR
)
RETURN TYPE_TIMESHEET_TABLE PIPELINED AS 
BEGIN
  --- Loop into my Table
    FOR CURRENT_ROW IN (
        SELECT TIMESHEET_ID, TEACHER_ID, TIMESHEET_WEEKSTART, TIMESHEET_WORKED_HOURS, TIMESHEET_CREATED, TIMESHEET_MODIFIED
        FROM TIMESHEETS
        WHERE TIMESHEET_ID = PARAM_TIMESHEET_ID
    )
    LOOP
        -- Check for null or invalid date values
        IF CURRENT_ROW.TIMESHEET_WEEKSTART IS NOT NULL AND
           CURRENT_ROW.TIMESHEET_CREATED IS NOT NULL AND
           CURRENT_ROW.TIMESHEET_MODIFIED IS NOT NULL THEN
            
            PIPE ROW(
                TYPE_TIMESHEET_ROW(
                    CURRENT_ROW.TIMESHEET_ID,
                    CURRENT_ROW.TIMESHEET_WEEKSTART,
                    CURRENT_ROW.TEACHER_ID,
                    CURRENT_ROW.TIMESHEET_WORKED_HOURS,
                    CURRENT_ROW.TIMESHEET_CREATED,
                    CURRENT_ROW.TIMESHEET_MODIFIED)
            );
        END IF;
    END LOOP;
END TIMESHEET_SELECT_BY_ID;
-- Revision history:
-- Sarabjeet Singh (2411801) Created the TIMESHEET_SELECT_BY_ID function.

/
--------------------------------------------------------
--  DDL for Function TIMESHEET_SELECT_BY_TEACHER_ID
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE FUNCTION "PROJECT1"."TIMESHEET_SELECT_BY_TEACHER_ID" (
    PARAM_TEACHER_ID IN CHAR
)
RETURN TYPE_TIMESHEET_TABLE_TEACHER_ID PIPELINED AS 
BEGIN
  --- Loop into my Table
    FOR CURRENT_ROW IN (
        SELECT TIMESHEETS.TIMESHEET_ID, TIMESHEETS.TEACHER_ID,TEACHERS.TEACHER_FIRST_NAME, TEACHERS.TEACHER_LAST_NAME, TIMESHEETS.TIMESHEET_WEEKSTART, TIMESHEETS.TIMESHEET_WORKED_HOURS, 
        TIMESHEETS.TIMESHEET_CREATED, TIMESHEETS.TIMESHEET_MODIFIED
        FROM TIMESHEETS
        ---INNER JOIN FOR FETCH DATA FROM TEAHCERS TABLE
        INNER JOIN TEACHERS
        ON TEACHERS.TEACHER_ID = TIMESHEETS.TEACHER_ID
        WHERE TEACHERS.TEACHER_ID = PARAM_TEACHER_ID
        -- Sort from most recent to oldest
        ORDER BY TIMESHEET_WEEKSTART DESC
    )
    LOOP
        -- While error SQL Error: ORA-01847: day of month must be between 1 and last day of month
        --Check for null or invalid date values
        IF CURRENT_ROW.TIMESHEET_WEEKSTART IS NOT NULL AND
           CURRENT_ROW.TIMESHEET_CREATED IS NOT NULL AND
           CURRENT_ROW.TIMESHEET_MODIFIED IS NOT NULL THEN
            
            PIPE ROW(
                TYPE_TIMESHEET_ROW_TEACHER_ID(
                    CURRENT_ROW.TIMESHEET_ID,
                    CURRENT_ROW.TIMESHEET_WEEKSTART,
                    CURRENT_ROW.TEACHER_ID,
                    CURRENT_ROW.TEACHER_FIRST_NAME,
                    CURRENT_ROW.TEACHER_LAST_NAME,
                    CURRENT_ROW.TIMESHEET_WORKED_HOURS,
                    CURRENT_ROW.TIMESHEET_CREATED,
                    CURRENT_ROW.TIMESHEET_MODIFIED)
            );
        END IF;
    END LOOP;

END TIMESHEET_SELECT_BY_TEACHER_ID;
-- Revision history:
-- Sarabjeet Singh (2411801) Created the TIMESHEET_SELECT_BY_TEACHER_ID function.

/
--------------------------------------------------------
--  Constraints for Table COURSES
--------------------------------------------------------

  ALTER TABLE "PROJECT1"."COURSES" MODIFY ("COURSE_ID" NOT NULL ENABLE);
  ALTER TABLE "PROJECT1"."COURSES" ADD CONSTRAINT "COURSES_PK" PRIMARY KEY ("COURSE_ID")
  USING INDEX "PROJECT1"."COURSES_PK"  ENABLE;
  ALTER TABLE "PROJECT1"."COURSES" MODIFY ("COURSE_NAME" NOT NULL ENABLE);
  ALTER TABLE "PROJECT1"."COURSES" MODIFY ("COURSE_CODE" NOT NULL ENABLE);
  ALTER TABLE "PROJECT1"."COURSES" MODIFY ("COURSE_DESCRIPTION" NOT NULL ENABLE);
  ALTER TABLE "PROJECT1"."COURSES" MODIFY ("COURSE_CREATED" NOT NULL ENABLE);
  ALTER TABLE "PROJECT1"."COURSES" MODIFY ("COURSE_MODIFIED" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table HISTORY
--------------------------------------------------------

  ALTER TABLE "PROJECT1"."HISTORY" MODIFY ("HISTORY_ID" NOT NULL ENABLE);
  ALTER TABLE "PROJECT1"."HISTORY" MODIFY ("REPORT_ID" NOT NULL ENABLE);
  ALTER TABLE "PROJECT1"."HISTORY" MODIFY ("HISTORY_FIELD_NAME" NOT NULL ENABLE);
  ALTER TABLE "PROJECT1"."HISTORY" ADD CONSTRAINT "HISTORY_PK" PRIMARY KEY ("HISTORY_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table REPORTS
--------------------------------------------------------

  ALTER TABLE "PROJECT1"."REPORTS" MODIFY ("REPORT_ID" NOT NULL ENABLE);
  ALTER TABLE "PROJECT1"."REPORTS" ADD CONSTRAINT "REPORTS_PK" PRIMARY KEY ("REPORT_ID")
  USING INDEX "PROJECT1"."REPORTS_PK"  ENABLE;
  ALTER TABLE "PROJECT1"."REPORTS" MODIFY ("REPORT_RESULT" NOT NULL ENABLE);
  ALTER TABLE "PROJECT1"."REPORTS" MODIFY ("REPORT_CREATED" NOT NULL ENABLE);
  ALTER TABLE "PROJECT1"."REPORTS" MODIFY ("REPORT_MODIFIED" NOT NULL ENABLE);
  ALTER TABLE "PROJECT1"."REPORTS" ADD CONSTRAINT "REPORTS_CHK_REPORT_RESULT" CHECK (REPORT_RESULT BETWEEN 0 AND 100) ENABLE;
  ALTER TABLE "PROJECT1"."REPORTS" MODIFY ("REPORT_EXAM_DATE" NOT NULL ENABLE);
  ALTER TABLE "PROJECT1"."REPORTS" MODIFY ("STUDENT_ID" NOT NULL ENABLE);
  ALTER TABLE "PROJECT1"."REPORTS" MODIFY ("TEACHER_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table STUDENTS
--------------------------------------------------------

  ALTER TABLE "PROJECT1"."STUDENTS" MODIFY ("STUDENT_ALLERGIES" NOT NULL ENABLE);
  ALTER TABLE "PROJECT1"."STUDENTS" MODIFY ("STUDENT_ID" NOT NULL ENABLE);
  ALTER TABLE "PROJECT1"."STUDENTS" ADD CONSTRAINT "STUDENTS_PK" PRIMARY KEY ("STUDENT_ID")
  USING INDEX "PROJECT1"."STUDENTS_PK"  ENABLE;
  ALTER TABLE "PROJECT1"."STUDENTS" MODIFY ("STUDENT_FIRST_NAME" NOT NULL ENABLE);
  ALTER TABLE "PROJECT1"."STUDENTS" MODIFY ("STUDENT_LAST_NAME" NOT NULL ENABLE);
  ALTER TABLE "PROJECT1"."STUDENTS" MODIFY ("STUDENT_ADDRESS" NOT NULL ENABLE);
  ALTER TABLE "PROJECT1"."STUDENTS" MODIFY ("STUDENT_CITY" NOT NULL ENABLE);
  ALTER TABLE "PROJECT1"."STUDENTS" MODIFY ("STUDENT_POSTAL_CODE" NOT NULL ENABLE);
  ALTER TABLE "PROJECT1"."STUDENTS" MODIFY ("STUDENT_CREATED" NOT NULL ENABLE);
  ALTER TABLE "PROJECT1"."STUDENTS" MODIFY ("STUDENT_MODIFIED" NOT NULL ENABLE);
  ALTER TABLE "PROJECT1"."STUDENTS" ADD CONSTRAINT "STUDENTS_UK_STUDENT_NUMBER" UNIQUE ("STUDENT_NUMBER")
  USING INDEX "PROJECT1"."STUDENTS_UK_STUDENT_NUMBER"  ENABLE;
--------------------------------------------------------
--  Constraints for Table TEACHERS
--------------------------------------------------------

  ALTER TABLE "PROJECT1"."TEACHERS" MODIFY ("TEACHER_ID" NOT NULL ENABLE);
  ALTER TABLE "PROJECT1"."TEACHERS" ADD CONSTRAINT "TEACHERS_PK" PRIMARY KEY ("TEACHER_ID")
  USING INDEX "PROJECT1"."TEACHERS_PK"  ENABLE;
  ALTER TABLE "PROJECT1"."TEACHERS" MODIFY ("TEACHER_FIRST_NAME" NOT NULL ENABLE);
  ALTER TABLE "PROJECT1"."TEACHERS" MODIFY ("TEACHER_LAST_NAME" NOT NULL ENABLE);
  ALTER TABLE "PROJECT1"."TEACHERS" MODIFY ("TEACHER_EMAIL" NOT NULL ENABLE);
  ALTER TABLE "PROJECT1"."TEACHERS" MODIFY ("TEACHER_SALARY" NOT NULL ENABLE);
  ALTER TABLE "PROJECT1"."TEACHERS" MODIFY ("TEACHER_CREATED" NOT NULL ENABLE);
  ALTER TABLE "PROJECT1"."TEACHERS" MODIFY ("TEACHER_MODIFIED" NOT NULL ENABLE);
  ALTER TABLE "PROJECT1"."TEACHERS" ADD CONSTRAINT "TEACHERS_CHK_SIN" CHECK (TEACHER_SIN LIKE '[0-9]{9}') ENABLE;
  ALTER TABLE "PROJECT1"."TEACHERS" ADD CONSTRAINT "TEACHERS_UK_SIN" UNIQUE ("TEACHER_SIN")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table TIMESHEETS
--------------------------------------------------------

  ALTER TABLE "PROJECT1"."TIMESHEETS" MODIFY ("TIMESHEET_ID" NOT NULL ENABLE);
  ALTER TABLE "PROJECT1"."TIMESHEETS" MODIFY ("TIMESHEET_WEEKSTART" NOT NULL ENABLE);
  ALTER TABLE "PROJECT1"."TIMESHEETS" MODIFY ("TEACHER_ID" NOT NULL ENABLE);
  ALTER TABLE "PROJECT1"."TIMESHEETS" MODIFY ("TIMESHEET_WORKED_HOURS" NOT NULL ENABLE);
  ALTER TABLE "PROJECT1"."TIMESHEETS" ADD CONSTRAINT "TIMESHEETS_PK" PRIMARY KEY ("TIMESHEET_ID")
  USING INDEX (CREATE UNIQUE INDEX "PROJECT1"."TIMESHEETS_INDEX_PK" ON "PROJECT1"."TIMESHEETS" ("TIMESHEET_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" )  ENABLE;
  ALTER TABLE "PROJECT1"."TIMESHEETS" MODIFY ("TIMESHEET_CREATED" NOT NULL ENABLE);
  ALTER TABLE "PROJECT1"."TIMESHEETS" MODIFY ("TIMESHEET_MODIFIED" NOT NULL ENABLE);
--------------------------------------------------------
--  Ref Constraints for Table HISTORY
--------------------------------------------------------

  ALTER TABLE "PROJECT1"."HISTORY" ADD CONSTRAINT "HISTORY_FK_REPORT_ID" FOREIGN KEY ("REPORT_ID")
	  REFERENCES "PROJECT1"."REPORTS" ("REPORT_ID") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table TIMESHEETS
--------------------------------------------------------

  ALTER TABLE "PROJECT1"."TIMESHEETS" ADD CONSTRAINT "TIMESHEETS_FK_TEACHER_ID" FOREIGN KEY ("TEACHER_ID")
	  REFERENCES "PROJECT1"."TEACHERS" ("TEACHER_ID") ENABLE;
